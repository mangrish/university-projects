%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: slides-new.dvi
%%Pages: 2 0
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%%BeginProcSet: PStoPS 1 15
userdict begin
[/showpage/erasepage/copypage]{dup where{pop dup load
 type/operatortype eq{1 array cvx dup 0 3 index cvx put
 bind def}{pop}ifelse}{pop}ifelse}forall
[/letter/legal/executivepage/a4/a4small/b5/com10envelope
 /monarchenvelope/c5envelope/dlenvelope/lettersmall/note
 /folio/quarto/a5]{dup where{dup wcheck{exch{}put}
 {pop{}def}ifelse}{pop}ifelse}forall
/setpagedevice {pop}bind 1 index where{dup wcheck{3 1 roll put}
 {pop def}ifelse}{def}ifelse
/PStoPSmatrix matrix currentmatrix def
/PStoPSxform matrix def/PStoPSclip{clippath}def
/defaultmatrix{PStoPSmatrix exch PStoPSxform exch concatmatrix}bind def
/initmatrix{matrix defaultmatrix setmatrix}bind def
/initclip[{matrix currentmatrix PStoPSmatrix setmatrix
 [{currentpoint}stopped{$error/newerror false put{newpath}}
 {/newpath cvx 3 1 roll/moveto cvx 4 array astore cvx}ifelse]
 {[/newpath cvx{/moveto cvx}{/lineto cvx}
 {/curveto cvx}{/closepath cvx}pathforall]cvx exch pop}
 stopped{$error/errorname get/invalidaccess eq{cleartomark
 $error/newerror false put cvx exec}{stop}ifelse}if}bind aload pop
 /initclip dup load dup type dup/operatortype eq{pop exch pop}
 {dup/arraytype eq exch/packedarraytype eq or
  {dup xcheck{exch pop aload pop}{pop cvx}ifelse}
  {pop cvx}ifelse}ifelse
 {newpath PStoPSclip clip newpath exec setmatrix} bind aload pop]cvx def
/initgraphics{initmatrix newpath initclip 1 setlinewidth
 0 setlinecap 0 setlinejoin []0 setdash 0 setgray
 10 setmiterlimit}bind def
end
%%EndProcSet
%DVIPSCommandLine: /usr/local/apps/tex/bin/dvips -o slides-new.ps
%+ slides-new.dvi
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 2000.08.22:1850
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (slides-new.dvi)
@start /Fa 5 85 df<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A
C8FCB3EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A113576B425>58
D<BC1280A5D8000701F8C7000114C0F0001F19071901851A7F1A3F1A1FA2F20FE0A21A07
A31A03A318F81BF01A01A497C7FC1701A317031707170F177F92B6FCA59238F8007F170F
170717031701A317001B3EA31B7CA395C8FCA21BFCA21BF8A21A01A31A031BF01A071A0F
A21A1F1A3FF27FE0F101FF1907191F0603B5FCBCFCA21BC0A34F517CD058>69
D<B600FC93B7FC8181A282D800076E9239003FFC0070EE07E08282A28202EF7F02E77F02
E380A202E18002E0806F7F6F7F6F7FA26F7F6F7F6F806F80A26F80707F707F707F707FA2
707F7080708070808583717F717F717F717FA27114807114C07114E07213F07213F8A272
13FC7213FE7213FF721487A27214C77214E77313F77313FF85A285858585A28586868686
A286868686A2D93FFC187FB7173F1B1F1B0F1B07755A60527CD169>78
D<93380FFFC00303B6FC031F15E092B712FC0203D9FC0013FF020F01C0010F13C0023F90
C7000313F0DA7FFC02007F494848ED7FFE4901E0ED1FFF49496F7F49496F7F4990C96C7F
49854948707F4948707FA24849717E48864A83481B804A83481BC0A2481BE04A83A2481B
F0A348497113F8A5B51AFCAF6C1BF86E5FA46C1BF0A26E5F6C1BE0A36C6D4D13C0A26C6D
4D1380A26C1B006C6D4D5A6E5E6C626D6C4C5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D
6D4B90C7FC6D6D4B5A6D01FF02035B023F01E0011F13F0020F01FC90B512C0020390B7C8
FC020016FC031F15E0030392C9FCDB001F13E0565479D265>I<003FBC1280A59126C000
3F9038C0007F49C71607D87FF8060113C001E08449197F49193F90C8171FA2007E1A0FA3
007C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912F0A553517BD05E>84
D E /Fb 38 122 df<ED03FF033F13E04AB512F8913907FE01FC91391FE0003E4A48130F
02FFC76C7E4948143F49484A7E494814FF130F5C495AA2715A49486EC7FC170C94C8FCAF
EF3FC0B9FCA43A003FC00001EE007F173FB3B3A4D9FFF0ECFFF0007F9026FFE07FEBFFE0
A43B547ED341>12 D<15E01401EC03C0EC0780EC0F00141E5C147C5C495A13035C495A13
0F5C131F91C7FC133E137EA25BA2485AA25B1203A2485AA3120F5BA2121FA25BA2123FA2
90C8FCA35AA5127EA312FEB3A3127EA3127FA57EA37FA2121FA27FA2120FA27F1207A36C
7EA212017FA26C7EA2137EA2133E7F80130F8013076D7E8013016D7E147C143C8080EC07
80EC03C0EC01E014001B7974D92E>40 D<12E07E12787E7E7E6C7E7F6C7E6C7E7F120013
7C137E133E133F7F6D7E80A26D7EA26D7EA2130180A26D7EA380147EA2147FA280A21580
A2141FA315C0A5140FA315E0B3A315C0A3141FA51580A3143FA21500A25CA2147EA214FE
5CA3495AA25C1303A2495AA2495AA25C49C7FC5B133E137E137C5B12015B485A485A5B48
C8FC121E5A5A5A5A1B797AD92E>I<120FEA3FC0EA7FE012FF13F0A213F8A3127F123FEA
0F381200A513781370A313F013E0A2120113C0120313801207EA0F00121EA25A5A12300D
23768B21>44 D<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C0C768B21>46
D<EC1FF891B5FC010314C090390FF81FF090391FC003F849486C7E017EC7127E49800001
168049141F4848EC0FC0000716E0491407000F16F0A34848EC03F8A2003F16FCA44848EC
01FEA700FF16FFB3A5007F16FEA56D1403A2003F16FCA4001F16F8A26D1407000F16F0A2
6C6CEC0FE0A26C6CEC1FC0A26C6CEC3F806C6CEC7F00017F14FE6D6C485A6D6C485A9039
0FF81FF00103B512C0010091C7FCEC1FF830517BCE3B>48 D<14075C5C147F5C1307133F
000FB5FCB6FC13F913C1EAF0011200B3B3B3A7497F010F13E0B712FEA4274F75CE3B>I<
EE03804C7EA34C7EA34C7EA34C7EA34C7EA24C7E16E7A203017F16C3A20303801681A2DB
07017F82A2030E80177FA24B80173FA24B6D7EA20378800370130FA203F0804B1307A202
01814B7FA24A488183A24AC78083A2020E82187FA24A6F7E021FB7FC4A82A30278C8EA1F
FC0270150FA202F0824A1507A249488284A249488384A249CA7FA24984010E177FA2011E
84193F133E017F8448486C4C7E000F01E04B487EB500FE037FEBFFFEA44F557CD458>65
D<B812FEEFFFC018F818FE26007FF8C73807FF806D4802017F011F6F6C7E727E727E727E
727EA2727EA2721380A21AC0A384A360A21A80A2601A00A24E5A180F614E5A4E5AF0FFE0
4D1380050790C7FCEF7FFC91B712E08418FE02F0C73801FF809438007FE0F01FF8727EF0
03FE857213807213C0F17FE0A2F13FF0A21AF8191FA21AFCA81AF8193FA21AF0197FF1FF
E0A24E13C04E1380604E1300F03FFC013FEEFFF8496C02075BBA12C096C7FC18FC18C046
527AD153>I<DC1FFC14034BB500C01307030F02F0130F037F14FC912801FFF800FF131F
02070180EB1FC04A48C73807E03FDA3FF8913801F07FDA7FE0EC00F8902601FF80ED3CFF
4990C97E494882494882495A4948824948825C01FF834849177F91CBFC48193F485AA248
48181FA2121F49180FA2123FA2491807127FA31A005B12FFAE127F7FA31A07123F7FA212
1FA26D180F000F190EA26C7E1A1E6C6C181C6C193C806C6D1778137F6E17F06D6CEE01E0
6D7E6D6CEE03C06D6CEE07806D6CEE0F006D6D151E9026007FE0157CDA3FF85DDA0FFEEC
03F06E6C6CEB0FE0020101F8EBFF806E6CB548C7FC030F14F8030114E09226001FFEC8FC
48567AD355>I<B812FEEFFFE018FC18FF26007FFCC7000F13C06D4802017F011F923800
3FF8F00FFC727EF001FF727F737E737E737E190F86737EA2737E737EA21B8085A21BC01A
7F1BE0A4F23FF0A51BF8AE1BF0A4F27FE0A41BC01AFF1B80A24F1300A24F5AA24F5AA24F
5A4F5A4F5A4F5A4F5A4E90C7FC4E5AF00FFCF03FF8013FEEFFE0496C020F5BBAC8FC18FC
18E04DC9FC4D527BD159>I<B74AB512FEA4C66C48C9003F13C06D487048C7FC6D4817F0
735A1A804FC8FC193E61614E5A4E5A4E5A4E5A4EC9FC183E60604D5A4D5A4D5A4D5A4DCA
FC173E5F5F4C5A4C5A4C5A160F4C7E4C7E167F4C7E4B7F5D923807CFFE92380F8FFFED1F
07DB3E037F037C804B7E9126F9E0007FDAFBC080DAFF80137F92C76C7E4A814A141F4A6E
7E8483717F8583717F85187F727EA2727E727EA2727E727FA2727F727FA2737E86193F86
86496C83496C93B512E0B7020FECFF80A451527BD15B>75 D<B712E0A4C66C90CAFCEB3F
FC6D5AB3B3A9191CA51938A61978A319F819F0A218011803A21807180F181F183F18FF01
3F1503496C023F13E0BAFCA43E527BD149>I<B500FC030FB512F8A28080D8003FDC007F
13006D6DED0FF8735A011D6D6F5A011C6D6F5AA26E7E81143F6E7E81140F6E7E82806E7F
82806F7E82153F6F7EA26F7E6F7EA26F7F83816F7F83167F707E83161F707E8382701380
18C0827013E0A2EF7FF0EF3FF8A2EF1FFC18FE170FEF07FF1981837113C119E183F07FF1
19F9183FF01FFD19FF8484A28484A284A2197F193F133E017F171F496C160F000713F0B6
6C15071903A219014D527BD158>78 D<003FBB12C0A449C79038F0000701F06E48130001
C0183F48C8EE0FE0007E1907007C1903A200781901A400701900A500F01AF0481A70A6C9
1700B3B3AC4C7E030313FC027FB712E0A44C517CD055>84 D<ECFFC0010F13F8013F13FE
9039FF00FF80D801F0EB3FE0D803C0EB0FF0486C6D7E01F86D7E000F816D13016F7EA370
7E6C5AEA01E0C9FCA6ED3FFF020FB5FC9138FFFC7F01071300EB1FF0EB7FC04848C7FCEA
03FC485A485A485A123F5B485A187012FF90C8FCA216FFA35D6D14BF007F14036DEB073F
6C6C90390F1FC0E06C6C131E6C6C90393C0FE1C02707FE01F013FF0001B5486C13806C6C
90398003FE00D907FCC712F834367BB43B>97 D<EB7F80B5FCA41203C6FC137FB3A6ED07
FC92387FFF800281B512E0913987F00FF891398F8001FC029EC7B4FC02BC6E7E02F86E7E
4A6E7E4A6E7E4A1407844A6E7EA2841701A284A283A21980AB19005FA360A24D5AA24D5A
804D5A6E5D6E4A5AD97E784A5A6E4AC7FCD97C1EEB01FE6E495A903A7807E01FF00201B5
12C0902670007F90C8FC90C7EA0FF839547DD241>I<EC0FFE91387FFFE049B512F89039
07F801FE90391FE0001FD93F80EB078049C7EA0FC001FE143F484815E00003157F485A48
5AA2485AEE3FC0003FED0F004991C7FCA2127FA35B12FFAB127F7FA3123F6D1570121F6D
15F0000F16E06D140112076C6CEC03C06D15806C6C14076C6DEB0F00D93FC0131E6D6C13
7C903907FC03F06DB55AD9007F1380DA0FF8C7FC2C367CB434>I<17FF4BB5FCA4ED0007
160182B3A6EC0FF8EC7FFF49B512E0903907FC03F090391FE0007C49487F49C7120F01FE
80484880485A000781484880A2485AA2485AA2127FA35B12FFAB127FA27FA2123FA27F12
1FA26C6C5C00075D7F6C6C5C6C6C5C6C6C021E7F6D6C017C13E0D91FC049EBFF8090390F
F807E00103B512800100495ADA1FF091C7FC39547CD241>I<EC0FF891B5FC010314C090
390FF80FF090391FC003FC90397F8001FE49C77E4848EC7F804848143F49EC1FC0485A00
0FED0FE05B001F16F01607485AA2007F16F8A25B160312FF90B7FCA30180C9FCA8127F7F
A2123FA26D1538121F17786C6C1570000716F06D15E06C6C14016C6CEC03C06C6C15806D
6C130F6D6CEB1F00D90FF0133C903907FE01F80101B512E06D6C1380DA07FCC7FC2D367D
B434>I<157F913803FFE0020F13F091383FC0F891387F01FC903901FE03FE903803FC07
14F81307EB0FF0A290391FE003FCED01F892C7FC495AB3B612FEA426003FC0C7FCB3B3A5
80EBFFF0007FEBFFF8A427547DD324>I<EF1FC0DA3FE0EBFFE0902701FFFC0313F00107
9039FF07E1F8903A1FE03FCF01903A3F800FFC03903A7F0007F80101FE010314F0484890
3901FC004000036F1300491300000781A24980000F82A8000793C7FC6D5CA200035D6D13
0100015D6C6C495A017F495A6E485A9039FFE03FC0D801C7B5C8FC01C113FC3903803FE0
91CAFCA57FA27F7F7F6CB612E016FF6C16C017F0013F15FC8390B8FCD803F8C7001F1380
D80FE0020113C04848EC007F4848ED1FE090C9120F127EEF07F012FE481603A56C160700
7E17E0007F160F6C6CED1FC06C6CED3F806C6CED7F006C6C15FED803FCEC03FCC6B4EC0F
F0D93FF0EBFFC0010FB6C7FC010114F8D9001F1380354E7DB43B>I<EB7F80B5FCA41203
C6FC137FB3A6ED07FC92383FFF8092B512E0913981F00FF8913983C007FC9139870003FE
028E1301029C6D7E14B814B002F06E7E5CA25CA35CB3AD2601FFE0903801FFE0B600C0B6
12C0A43A537CD241>I<1378EA01FE487E487FA66C90C7FC6C5AEA007890C8FCB0EB7F80
B5FCA41203C6FC137FB3B3A43801FFE0B61280A419507CCF21>I<EBFF80B5FCA41203C6
FC137FB3A793B512F8A4043F138093381FFC0017F017C094C7FC163E5E5E4B5A4B5AED07
804BC8FC151E5D15FC1481EC83FEEC87FF148F029E7F9138BC7FC0ECF83F02F07F4A6C7E
ECC00F02807F4A6C7E6F7EA26F7E6F7F167F83707E161F83707E160783707E8318802601
FFC04913E0B6D8803F13FFA438537DD23E>107 D<EB7F80B5FCA41203C6FC137FB3B3B3
B13801FFE0B612C0A41A537CD221>I<01FFD907FEEC03FFB590261FFFC0010F13E0037F
01F0013F13F8912701F80FFC9038FC07FE913D03C003FE01E001FF000390260700019038
038000C6010E6D6C48C76C7E6D48DA7F8E6E7E4A159CA24ADA3FF86E7E02605D14E04A5D
A34A5DB3AD2601FFE0DAFFF0EC7FF8B6D8C07F9026FFE03FB512F0A45C347CB363>I<01
FFEB07FCB590383FFF8092B512E0913901F00FF8913903C007FC000349C66C7EC6010E13
016D486D7E5C143002706E7E146014E05CA35CB3AD2601FFE0903801FFE0B600C0B612C0
A43A347CB341>I<EC0FFC91387FFF8049B512E0903907F807F890391FE001FE90393F80
007F017EC7EA1F80496E7E48486E7E00038248486E7EA248486E7EA248486E7EA2003F82
A24848ED7F80A400FF17C0AB007F1780A26D15FFA2003F1700A2001F5E6D1401000F5E6D
140300075E6C6C4A5A6C6C4A5AA2D8007FEC3F806D6C49C7FC90391FE001FE903907F807
F86DB55AD9007F1380DA0FFCC8FC32367CB43B>I<90397F8007FCB590387FFF800281B5
12E0913987F00FF891398F8003FC000190399E0001FF6C01BC6D7FD97FF86E7E4A6E7E4A
6E7E4A140F844A6E7EA2717EA3717EA4711380AB4D1300A44D5AA24D5AA2606E140F4D5A
6E5D6E4A5A6E4A5A02BC4AC7FC029E495A028FEB07FC913987E01FF00281B512C0DA807F
90C8FCED0FF892CAFCB13801FFE0B612C0A4394B7DB341>I<DA07F81307DA7FFF5B49B5
12C0903907FC03E0903A1FF000F81FD93FC0133C49486D5A49C7120E4848140F48486EB4
FC000781485A4980121F82485AA2485AA4485AAB6C7EA46C7EA36C6C5CA26C6C5C12076D
5C6C6C5C6C6C141E6C6D5B6D6C5B90391FE001F090390FF807E00103B512800100495AEC
1FF091C8FCB1040313C04BB61280A4394B7CB33E>I<01FFEB1F80B5EB7FF0913801FFF8
913803E1FC91380783FE0003EB0F07C6131EEB7F1C1438143091387003FC91386000F016
0014E05CA45CB3AA8048487EB612F0A427347DB32E>I<D907FE13C090387FFF8148B512
E33907F803FF390FC0007F4848133F48C7121F003E140F007E1407127C00FC1403A31501
7EA27E7F6C6C90C7FC13F013FF6C13F86CEBFF806C14E06C14F86C14FEC680013F148001
0714C0D9003F13E014039138007FF0151F00E0140FED07F8A26C1403A215017EA36C15F0
A26C14036C15E015076DEB0FC06DEB1F80D8FDF0EB3F0039F8FC01FE39F07FFFF8D8E01F
13E0D8C00390C7FC25367CB42E>I<EB01C0A71303A41307A3130FA2131FA2133F137F13
FF5A5A001F90B512E0B7FCA326003FC0C7FCB3A71638AC6E1378011F1470A26D6C13F016
E0903807F801903903FC03C0903901FE07806DB51200EC3FFCEC07F0254B7EC92E>I<D9
7F80EC7F80B591B5FCA400031503C61500017F157FB3AC17FFA35EA3013F5C6EEB077FA2
011F020E7F6D6C011C13F06E0178EBFFC0903903FC01F06DB512E06D6C1380912607FC00
EB80003A357CB341>I<B60103B51280A4000301F09039007FF800C601C0EC3FE0017FED
1F8095C7FC133F171E6D7E171C6E143C010F1538A26E1478010715708001035DA26E1301
01015D806D4A5AA2ED8007027F91C8FC15C0023F130EA2EDE01E021F131CA26E6C5AA2ED
F87802071370A26E6C5AA215FF6E5BA26E5BA36FC9FCA2153EA3151C39347EB23E>I<B6
0007B5D8F007B5FCA400039027E0001FFEC713F06C0180D90FF8EC7FC06C0307ED3F80F2
1F00017F0203151EA26D6C801A1CA26D6C496C5CA26E6E1478010FDA0E7F1470A26E6F13
F00107DA1C3F5CA26EEDC0010103DA381F5CA26E0178EBE0030101DA700F5CA26E01F0EB
F0076DDAE00791C7FCA2DA7F81ECF80EEEC003A2DA3FC36E5AEE8001A2DA1FE76E5A93C7
FCA2DA0FFEEC7F70A219F06E486E5AA36E486E5AA36E486E5AA36E486EC8FC50347EB255
>I<B60103B51280A4000301F09039007FF800C601C0EC3FE0017FED1F8095C7FC133F6E
141E131F171C6E143C010F15388001075DA26E14F001035D8001014A5AA26E13036D5D15
80027F49C8FCA26F5A023F130E15E0021F5BA2EDF03C020F133815F802075BA2EDFCF002
035B15FE6E6C5AA36E5BA26FC9FCA3153EA2151CA2153C153815781570A215F05D14015D
A2003E495A127F486C48CAFCA2140E141E495A6C5B007C5B383F03E06CB45A00075BD801
FCCBFC394B7EB23E>121 D E /Fc 9 118 df<EB01C013031307131F13FFB5FCA2131F12
00B3B3A8497E007FB512F0A31C3879B72A>49 D<EB0FF0EB7FFE48B57E3903E03FE0390F
000FF0000E6D7E486D7E486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FC
EDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC
011EEB01805B5B49130348481400485A485A000EC75A000FB6FC5A5A485CB6FCA321387C
B72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479
A317>58 D<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E
1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD
4813C0B612C0A32F397DB836>70 D<EB07F8EB1FFF90387C0FC03901F803E03903F001F0
D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA512
7EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090387E
03E090381FFF80903803FC0020277EA525>101 D<ED03F090390FF00FF890393FFC3C3C
9039F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C48
5AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB5
12C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F84814
00A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC3900
7FFFF0010790C7FC26387EA52A>103 D<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03
F012FFA312071203B3AA487EB512C0A312387EB717>105 D<3807E01F00FFEB7FC09038
E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300A45BB3A2487E
B512F0A31C257EA421>114 D<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4
150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07
E00029267EA42E>117 D E /Fd 11 117 df<95267FFFC00303B5FC053FB500FC4AB612
E00403B7021F15FC043F04C090B77E93B8D8E007707E0303DDF81F83030FDAE003D9FC7F
DA800F13F0033F49C7003FB600F0C77F92B500F0020F0380EC3FFC4A02806E02FCC8FC02
0749C8001F4AEDFFFE4A49037F02E04A7F4A4992B6485C4A494A4B4A804C95C85A4A494A
5C91B5FC4C5F5B93C84B4B80A249785C4B60A3737291C7FC857A5B083F050013F874725A
F90F809EC9FCAC0D0FB612C0C4FCA8D8000391C9001F01F8C812038C8CB3B3B3A5003FB7
D8F001B8D8800FB712FCA896797CF8A1>14 D<92383FFFF80207B612E0027F15FC49B87E
010717E0011F83499026F0007F13FC4948C7000F7F90B502036D7E486E6D806F6D80727F
486E6E7F8486727FA28684A26C5C72806C5C6D90C8FC6D5AEB0FF8EB03E090CAFCA70507
B6FC041FB7FC0303B8FC157F0203B9FC021FECFE0391B612800103ECF800010F14C04991
C7FC017F13FC90B512F04814C0485C4891C8FC485B5A485B5C5A5CA2B5FC5CA360A36E5D
A26C5F6E5D187E6C6D846E4A48806C6D4A4814FC6C6ED90FF0ECFFFC6C02E090263FE07F
14FE00019139FC03FFC06C91B6487E013F4B487E010F4B1307010303F01301D9003F0280
D9003F13FC020101F8CBFC57507ACE5E>97 D<903801FFFCB6FCA8C67E131F7FB3ADF0FF
FC050FEBFFE0057F14FE0403B77E040F16E0043F16F84CD9007F13FE9226FDFFF001077F
92B500C001018094C86C13E004FC6F7F4C6F7F04E06F7F4C6F7F5E747F93C915804B7014
C0A27414E0A21DF087A21DF8A31DFC87A41DFEAF1DFCA4631DF8A31DF098B5FC1DE0A250
14C0A26F1980501400705D705F704B5B505B704B5B04FC4B5BDBE7FE92B55A9226C3FF80
01035C038101E0011F49C7FC9226807FFC90B55A4B6CB712F04A010F16C04A010393C8FC
4A010015F84A023F14C090C9000301F0C9FC5F797AF76C>I<93383FFFF00307B612C003
3F15F84AB712FE0207707E021F17E0027F8391B526FC001F7F010302C001037F4991C748
7F49495C495B4901F04A7F5B90B55A485CA2485C4891C8FCA248715B5C48715B725B4A6F
5B489438007FC0071FC7FC96C8FC5AA25CA3B5FCAF7E80A47E80A27E806CF11F80F23FC0
6C6E167FA26C6EEEFF80816C606C6E17006D6D4B5A6D6D15076D6D4B5A6D6D6C4A5A6D02
E0EC7FF06D02F849485A01009126FF801F5B6E91B6C7FC021F5E020716F8020116E06E6C
1580030702FCC8FCDB003F13804A507ACE56>I<93387FFF80030FB512FC037FECFF804A
B712E0020716F8021F16FE027FD9F8077F49B5D8C000804991C7003F13E04901FC020F7F
49496E7F49498049496E7F49496E7F90B55A48727E92C914804884485B1BC048841BE048
5BA27313F05AA25C5AA21BF885A2B5FCA391BAFCA41BF002F8CCFCA67EA3807EA47E806C
F103F0F207F86C7F1A0F6C6E17F06C191F6F17E06C6E163F6D6DEE7FC06D6D16FF6D6D4B
13806D6D4B13006D6D6CEC0FFE6D02E0EC3FFC6D02F8ECFFF86D9126FFC00F5B023F91B6
5A020F178002034CC7FC020016F8031F15E0030392C8FCDB000F13E04D507BCE58>101
D<EB01FCEB07FF011F13C0497F497F90B57EA24880A24880A76C5CA26C5CA26D5B6D5B6D
5B010790C8FCEB01FC90CAFCB2903801FFFC007FB5FCA8C67E131F7FB3B3B3A5B81280A8
297979F835>105 D<903801FFFCB6FCA8C67E131F7FB3B3B3B3B3ABB812C0A82A7879F7
35>108 D<902601FFF891380FFFE0B692B512FE05036E7E050F15E0053F15F84D819327
01FFF01F7F4CD900077FDC07FC6D80C66CDA0FF06D80011FDA1FC07F6D4A48824CC8FC04
7E6F7F5EEDF9F85E03FB707F5E15FF5EA25EA293C9FCA45DB3B3A6B8D8E003B81280A861
4E79CD6C>110 D<93381FFFE00303B6FC031F15E092B712FC020316FF020F17C0023FD9
FC0014F091B500C0010F13FC4991C700037F4901FC02007F010F496F13C049496F7F4949
6F7F4B8149496F7F90B5C96C7F4886A24849707F481B80A248497014C0A2481BE0A34849
7113F0A3481BF8A5B51AFCAE6C1BF8A46C1BF06E94B5FCA36C1BE0A26C6D4C14C0A26C1B
806E5E6C1B006C6E4B5BA26C6E4B5B6D6D4B5B6D6D4B5B6D6D4B5B6D6D92B55A6D01FF02
035C6D02C0010F91C7FC010002FC90B512FC6E90B75A021F17E00207178002014CC8FCDA
003F15F0030392C9FCDB001F13E056507BCE61>I<902601FFF8EB07FEB691383FFFC094
B512F00403804C14FE4C8093261FFC3F138093263FE07F13C0DC7F80B5FCC66C5D011FDA
FE0114E06DEBF9FC16F815FB16F016E015FF16C07114C05E72138095381FFE0093C76C5A
F001E095C8FCA25DA65DB3B3A2B812F8A8434E7ACD4F>114 D<15FFA75CA55CA45CA25C
A25CA25CA25C91B5FCA25B5B5B131F5B90B9FC120FBAFCA6D8000791C9FCB3B3A3F01FE0
AE183F7014C07F187F7014806D16FF826D4B13006E6D485AEEFE0F6E90B55A020F5D6E5D
020115C06E6C5C031F49C7FC030113F03B6E7CEC4B>116 D E /Fe
1 14 df<ED0FFF92B512F0020314FC020F14FF91263FF80113C0913AFF80001FF04948C7
EA07F8D907F8EC01FED90FE0EC007FD91F80ED1F8049C96C7E017E707E49707E4848707E
4916004848177C0007187E49173E484883A248CBEA0F80A2003EF007C0A2003C1803007C
19E0A200781801A200F819F0A2481800A96C1801A2007819E0A2007C1803A2003C19C000
3E1807A26CF00F80A26C6CEF1F00A26C6C173E6D177E0003187C6C6C5F6D16016C6C4C5A
017E4C5A6D4C5A6D6C4B5AD90FE0037FC7FCD907F8EC01FED901FEEC07F86D6C6CEB1FF0
913A3FF801FFC0020FB6C8FC020314FC020014F0030F90C9FC44477CB54D>13
D E /Ff 12 120 df<DB1FF013C09238FFFC010203EBFF03913A0FF00F878091393F8003
CF9139FE0001EF4948EB00FFD903F01500D90FE080495A49488091C8123E137E13FE485A
4848153CA2485AA248481538A2485A94C7FC123F5BA3127F90CBFCA412FEA2EE03C0A25F
127E160794C7FC5E160E007F151E6C5D5E6C6C147016F06C6C495A6C6CEB07C06C6C49C8
FC6C6C133E6CB413FC90387FFFF0011F13C0D903FEC9FC323775B437>67
D<902607FF8090383FFFC0496D5BA2D9001F913803F8004A6C6D5A6060EC3BF0027B1403
60EC71F8A202F11407DAF0FC91C7FC14E0A20101017E5B170E14C0810103151EEE801CEC
801FA20107ECC03C030F1338140016E049010713781770010E14F01503011E15F0705A01
1C1301A2013C14FD03005B133816FF0178147F5F0170143FA213F070C8FC1201EA07F826
7FFF807FB5140EA23A337BB239>78 D<EB03F8EB0FFEEB3E0F9038F807803801F003EA03
E0EA07C0120FEA1F801407D83F0013005C007E133EEB03F8387FFFE04848C7FC00FCC8FC
A45AA4EC0180EC03C0A2007CEB0780EC1F00003C133E6C13F8380F03E03807FF80D801FC
C7FC1A2277A023>101 D<EB0FC0EA01FF5A5CEA001FA391C7FCA25BA2133EA2137EA213
7CA213FCA2491378EC01FE0001EB078FEC0E0F9038F01C3F143800031370ECE03E9038E1
C01C9038E38000D807E7C7FC13EE5B13F8120F13FFEB9FC0EB83F0EA1F81EB80F8130015
0C48141E151C123EA2007E143C1538127C157800FCEB787015E048EB3FC00070EB0F8020
357BB323>107 D<2703C003F8137F3C0FF00FFE01FFC03C1E783C1F07C1E03C1C7CF00F
8F01F03B3C3DE0079E0026383FC001FC7FD97F805B007001005B5E137ED8F0FC90380FC0
0100E05FD860F8148012000001021F130360491400A200034A13076049013E130FF08180
0007027EEC83C0051F138049017C1403A2000F02FC1407053E130049495CEF1E0E001F01
015D183C010049EB0FF0000E6D48EB03E03A227AA03F>109 D<14FCEB07FF90381F07C0
90383E03E09038FC01F0EA01F83903F000F8485A5B120F484813FCA248C7FCA214014814
F8127EA2140300FE14F05AA2EC07E0A2007CEB0FC01580141FEC3F006C137E5C381F01F0
380F83E03803FF80D800FCC7FC1E2278A027>111 D<011E137C90387F81FF9039F3C387
C09039E3EF03E03901E1FE01D9C1FC13F0EBC3F8000313F0018314F814E0EA0787130700
0313C01200010F130316F01480A2011F130716E01400A249EB0FC0A2013EEB1F80A2017E
EB3F00017F133E5D5D9038FF81F09038FDC3E09038F8FF80027EC7FC000190C8FCA25BA2
1203A25BA21207A25BB5FCA325307FA027>I<3903C00FC0390FF03FF0391E78F078391C
7DE03C393C3FC0FC00381380EB7F00007814F8D8707E13701500EAF0FC12E0EA60F81200
1201A25BA21203A25BA21207A25BA2120FA25BA2121FA290C8FC120E1E227AA020>114
D<EB03F0EB1FFCEB3C1EEB780FEBF007EA01E0140F0003131F13C0A2EBE00414007FEBFF
8014E06C13F06C13F8EB7FFC1307EB00FE147E143E123800FC133CA3147C00F013784813
F0EAF001387803E0383C0F80381FFE00EA03F818227AA01F>I<1303EB0F80A3131FA214
00A25BA2133EA2137EA2137C387FFFF8A2B5FC3800F800A21201A25BA21203A25BA21207
A25BA2120FA25B1460001F13F014E01300130114C01303001E1380EB07005BEA0F1EEA07
F8EA01E015307AAE19>I<EA01F0D803FC1307D80F1E5B000E5C121C123C00385CD8783E
133E1270A2017E137ED8F07C137CEA60FCC65A15FC00015C5BA2140100035C13E0166002
031370EDE0F0D807C014E0A20003EB07E116C09038E00FC1EC1FC3000190383FE3809038
F071E73A007FE0FF0090381F803C24227AA029>I<D801F01538D803FC010E13FCD80F1E
131E000E143E121C123C0038027E137CD8783E137C0070163CA2017E13FCD8F07C491338
EA60FCC65A0201147800014A137013F0A2020314F0000316E001E05BA2160117C001C013
C00207EB0380A29039E00FE0071700021F130E3A01F03DF01E3A00F878F83C90393FF03F
F090390FC00FC02E227AA033>119 D E /Fg 32 122 df<123C127EB4FCA21380A2127F
123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F
14E0391F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A3
6C14F0A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126
>48 D<13075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB1
26>I<EB3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F0
0060130712FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F8015
00147E5C495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC00
1C1470001FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F8039
0F001FC0001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2
EC0FE015C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F814
0315FC140115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1F
E0390FE03F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A2140F14
1FA2143F147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA
0180120313001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B512
80A321337EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8
FCA9EB0FC0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403
A215F8A41218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F
00380F80FE3807FFF8000113E038003F801D347CB126>I<14FE903807FF80011F13E090
383F00F0017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA3
5A127EEB07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F813
0015FC1400A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB
07E03903E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126>I<B512FEA3000113
006C5AB3B3A7487EB512FEA317337EB21C>73 D<B512FEA3D803FEC9FC6C5AB3A9EE0180
A416031700A45EA25E5E5E5E16FE00031407B7FCA329337DB230>76
D<EC07FC91387FFFC0903901FC07F0903907E000FC4948137E013FC7EA1F80017E6E7E49
6E7E48486E7E00038249140148486E7E000F8249157E001F167FA24848ED3F80A2007F17
C0A390C9121F4817E0AB6C17C0A26D153FA2003F1780A26D157F001F1700A2270FE001F0
13FE0007D907FC5B9039F00E0E013B03F80C0703F8000190391C0383F03B00FC180187E0
017EECCFC0013FECDF8090271F9C00FFC7FCD907EC13FC902701FE07F013609038007FFF
913807FC7091C7007813E0A2EE7C01EE7E0393387F07C0EE3FFFA21880821800705A705A
EE01F033447CB43C>81 D<B500FE90381FFFF8A3000190C813006C48153C1718B3AF1738
017F1530A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49C7FCD901FC131E
6DB413FC91383FFFF0020F13C0020190C8FC35357EB23A>85 D<003FB612FCA39039F800
07F813C090C7EA0FF0003EEC1FE0123C0038EC3FC00078EC7F801270EDFF004A5AA20060
495AA24A5A4A5AC7FC4A5A4A5AA24A5A4AC7FCA2495A495AA2495A495AA24948130C495A
A2495A49C7FCA24848141CA2485A485A1638485A4848147816F84848130148481307153F
B7FCA326337CB22F>90 D<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA2
6E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C0
5AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237D
A126>97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49
EB1F8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001EC
EB3F0001CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038
FC07C03901F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E
12FEAA127FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090
383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901
F003BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C
6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0
EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F812
7EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E0
3901F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F07809038
3E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387F
FFE0A31A357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0F
C01F83809039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEB
F07C380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC488038
1F0001003EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903
F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF0
9038F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326
347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3
A6EA0FF0B5FCA310337EB215>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347E
B315>108 D<3903F01FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497F
A25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>110 D<EB07F0EB3FFE9038FC1F80
3901F007C03903C001E000078048486C7E48C7127CA248147E003E143E007E143FA300FE
1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D9
3FFEC7FCEB07F021237EA126>I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA
03ECA29038FC0F8049C7FCA35BB2487EB512E0A31A217FA01E>114
D<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27EA200FE90C7FC6C7EEA7F
FC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F140F6C1307A37E15006C
5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<1330A51370A313F0A21201
A212031207381FFFFEB5FCA23803F000AF1403A814073801F806A23800FC0EEB7E1CEB1F
F8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B35DA35D1201
6D4813800000903803BFFC90387E073FEB1FFED907F8130026227EA02B>I<B5EBFFF0A3
D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C6C5BA26D1370017E1360
137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D5AA26D5AA36D5AA21460
24217E9F29>I<3A7FFF807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA2
6D131C017E1318A26D5BA2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390
C7FC14FBEB01FEA26D5AA31478A21430A25CA214E05CA2495A1278D8FC03C8FCA2130613
0EEA701CEA7838EA1FF0EA0FC025307F9F29>121 D E /Fh 1 16
df<ED0FFE92B512E0020714FC023FECFF8091B712E04982010716FC4982498249834983
90B97E4884A248844884A248844884A2481980A34819C0A4BB12E0AD6C19C0A46C1980A3
6C1900A26C606C60A26C606C60A26C606D5F6D5F6D94C7FC6D5E6D5E010116F06D5E023F
1580020702FCC8FC020014E0DB0FFEC9FC434377CC56>15 D E /Fi
46 122 df[<1638167816F0ED01E0ED03C0ED0780ED0F00151E153E5D5D4A5A4A5AA24A
5A4A5A141F92C7FC143E147E147C14FC495AA2495AA2495AA2495AA2495AA2133F91C8FC
5B137EA213FE5B1201A25B1203A3485AA4485AA4485AA5123F5BA5127FA390C9FCA65AB3
A87EA67FA3123FA57F121FA56C7EA46C7EA46C7EA312017FA212007F137EA2137F7F8013
1FA26D7EA26D7EA26D7EA26D7EA26D7E147C147E143E8081140F6E7E6E7EA26E7E6E7E15
7C81151E81ED0780ED03C0ED01E0ED00F016781638>37 172 113
256 61 40 D[<12E07E12787E7E7E6C7E6C7E7F6C7E6C7E137C7FA27F6D7E8013076D7E
801301806D7EA2147EA280A26E7EA26E7EA2811407811403A281140181A2140081A3157F
A4ED3F80A4ED1FC0A516E0150FA516F0A31507A616F8B3A816F0A6150FA316E0A5151F16
C0A5ED3F80A4ED7F00A415FEA35D1401A25D14035DA214075D140F5DA24A5AA24AC7FCA2
147EA25CA2495A5C13035C495A130F5C49C8FC133EA25B5B485A485A5B485A48C9FC121E
5A5A5A5A>37 172 120 256 61 I<B812C0A72A077FA834>45 D<EA0780EA1FE0EA3FF0
EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA07800E0E728D2B>I<ED7FF00207B57E023F14
F091B612FC4915FF902707FE007F13C0D90FE0010F7FD91F80010113F849C87F017CED3F
FE496F7E48486F138048486F13C04848817113E0484817F090CAFC48EF7FF8121E003EEF
3FFC123CA2007CEF1FFE1278A2EA7FC0D8FFF0EE0FFF7F7F7FA76C5A6C5A6C5AD807C0EE
1FFECBFCA3F03FFCA3F07FF8A219F018FF19E05F19C04D1380A24D130060170F4D5A604D
5A4D5A604D5A4C90C7FC4C5A4C5A5F4C5A4C5A4C5A4C5A94C8FC16FE4B5A4B5A4B5A4B5A
4B5A4B5A4BC9FC157E5D4A5A4A5A4A5A4A5A4A4815074AC9FC143E4A160E5C495A495A49
5A495A49CA121E011E171C5B5B49173C485A4848177C4848EE01FC48B912F8A25A5A5ABA
FCA219F0A3407279F14F>50 D<ED1FFE4AB512E0020F14FC023F14FF9126FFE00713C0D9
03FEC713F0D907F0EC3FF8D91FC06E7E49C8EA07FE017E6F7E017883496F7F48486F7F12
0349834848167F01F88313FE6D6C153F486D82A4805CA37E6C5B6C48C95BD80078167F90
CAFCA261A218FF61A24D5B615F96C7FC4D5A60170F4D5AEF3FE04D5A4D5A4C48C8FCEE07
FCEE1FF092381FFFC091260FFFFEC9FCA2EEFFE091C7EA07FCEE00FFEF3FC0EF1FF0717E
EF07FE717E717F717F85727E727EA285727EA2727EA31A80A2841AC0A3EA07E0EA1FF848
7E487EB5FCA51A80605BA26C48180013F001C05E007CCA5B7E4E5A7E6D4C5A6C6C5F0007
17FF01F04B5B6C6C4B5B6C6C5F6CB4030F90C7FC6D6C4A5AD93FF04A5AD90FFCECFFF890
2707FFE00713E0010190B612806D6C92C8FC020F14F8020314E09126001FFEC9FC42757A
F14F>I<183CA2187C18FCA217011703A21707170FA2171FA2173F177F177717F7EE01E7
17C716031787EE0707160F160E161E163C1638167816F016E0150116C01503ED07801600
5D151E151C153C15385D15F05D14014A5A5D14074AC7FC140E141E141C143C5C147014F0
495A5C13035C49C8FC5B130E131E5B1338137813705B12015B1203485A90C9FC5A121E12
1C123C12385A12F0BCFCA5CAD80FFCC7FCB3A44D7E4D7E94B512C0030FB712FCA548737D
F24F>I<EA0780EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0780C7FCB3B3
AAEA0780EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA07800E4A72C92B>58
D<F007804E7EA34E7EA34E7EA34E7EA34E7EA24D7FA34D7F18DF18CF0507801887A2050F
801803A2051F80EF1E01A2053E80EF3C00A24D80197FA24D80193F0401815F191F040381
5F850407824D7FA2040F8294C77EA24C82041E80A2043E82043C80A24C821A7FA24C821A
3F0301835E1A1F0303835E860307844C81A2030F8493C97EA24B84031E82A2033FB97EA3
4B84A20378CA127F4B841B3F0201855D1B1F0203855D870207864B83A2020F8692CB7EA2
4A86021E84A2023E86023C84A24A861C7FA24A861C3F010187A201031A1F891307010F86
496C4F7F496C87D9FFFE4F7F00076D6C4DB512F8B600F8057FECFFFCA56E7A7CF977>65
D<DE7FFCED01C0050FB512C094B600F81403040315FE041F6F6C1307047FD9F00013E04B
4848C7D80FF0130F030701F0EC03FC4B0180DA00FE131FDB3FFEC9123FDB7FF893381F80
3F4A4848EE07E04A01C0933803F07F4A4916014A90CBEAF8FFDA1FFC187C4A48183F4A48
844A5A498649498449498492CCFC494885131F4A85495A017F1B7F5C01FF1B3F5C5A4A1A
1F5AA248491A0FA25A91CE1207A25A5BA2003F1C03A25BA2127F9AC7FCA45B12FFB2127F
7FA5123FF501C07FA2121FA27F7E1D036E1B807EA26C7F1D076C1D00806C6480017F1B0E
6E1A1E013F1B1C6D6C1A3C6E1A38010F1B786D6C1A706F19F06D6D4E5A6D7F6D505A6E6C
4E5A6E6C180FDA1FFE4EC7FC6E6C183E6E6D5F6E6D5F6E01F04C5A6E6C6CEE07E0DB3FFE
4C5A92260FFF80ED3F806F01F003FEC8FC030101FEEC07FC9227007FFFF0EBFFF0041F90
B612C0040393C9FC040015FC050F14E09426007FFCCAFC627C78F873>67
D<BA12FCF1FFE01AFC1AFF1BC0D8003F01F0C8003F13F0010749030113FC4B9238003FFF
6D060F7F08037F080013F0757E757EF30FFE757E757F757F87767E89767E767E1C0F891C
0789767FA2767FA2767FA28A1D7FA28A1D3FA28AA21D1F8AA48A89A51F80B11F00A56566
A4661D3FA3661D7F66A21DFF66A2525BA2525BA25290C7FC651C0F525A651C3F525A525A
515B515B5190C8FC515A515AF37FF8515A08035B080F138049063F90C9FC6F923801FFFC
013F6D031F5BBC12E01B8008FCCAFC1AE007FCCBFC697678F57A>I<DE7FFCED01C0050F
B512C094B600F81403040315FE041F6F6C1307047FD9F00013E04B4848C7D80FF0130F03
0701F0EC03FC4B0180DA00FE131FDB3FFEC9123FDB7FF893381F803F4A4848EE07E04A01
C0933803F07F4A4916014A90CBEAF8FFDA1FFC187C4A48183F4A48844A5A498649498449
498492CCFC494885131F4A85495A017F1B7F5C01FF1B3F5C5A4A1A1F5AA248491A0FA25A
91CE1207A25A5BA2003F1C03A25BA2127F9AC8FCA45B12FFB26C7EA3083FB712F8A3123F
7F97C7ECF8000A0F13E0001F755B887F7EA2807EA26C7FA26C7FA27E806D7EA26D7E131F
806D7E7F816D7F6D6D606D7F6E7E6E6C606E6C606E7E6E01C0173E6E6DEF7E7F6E6DEFFC
3F9126007FFCEE01F86FB4933807F01F030F01C092380FE00F6F01F8ED7F80030101FF91
3901FF00076F6C01F8D93FFC1303041F90B600F01301040304C01300040093CAFC050F14
F09426007FFECBFC6D7C78F87D>71 D<B84CB612E0A5D8003F01FCCB6CEBFC00010701E0
061F13C09BC7FC6D49F00FFC1DF065525A9AC8FC1C3E1C3C6464515A515A515A51C9FC1B
1E636363505A505A505A50CAFC1A1E6262624F5A4F5A4F5A4FCBFC191E6161614E5A4E5A
4E5A4ECCFC181E183F4E7E18FF4D7F4D7F5F4D7F4D7F173C4D7FEFF07F4C486C7EDC03C0
7F4C487EDC0F0080041E6D7F4C7F4C814C6D7FDBC1E07FDBC3C081DBC7806D7F03CFC812
7F03DE8203FC153F4B6F7E4B834B814B83737F8587737F8587747E1A3F8786747F888688
747F8688747F1B7F88757E878987757F898789757F8789767EA2898A496D8699B512F001
3F01FC4D14FCB8043FECFFF8A56D7678F57C>75 D<B812E0A5D8003F49CCFC010713F05D
6D5BB3B3B3AC1C70A51CE0A81B01A31CC01B03A41B07A21B0FA21B1FA2F33F80A21B7F1B
FF62621A0F621A7F494DB5FC6F150F013F6D4AB61200BDFCA5547678F563>I<B600E04C
B612FCA28181A2D8000F6DDC000714000103070013F86FF03FE0DABFFF725A149F028F6D
715AA202876D71C7FC82148302817F82148082157F6F7E828183816F7F83816F7F838183
167F707E83828482707F84828482707F84177F717E84838583717F85838583717F85187F
85183F727E8684727F86848684727F86197F86193F737E1B80857313C0A27313E01BF085
7313F81BFC1A7F1BFE1A3FF21FFF1C87861CC7867413E71CF7867413FFA287A28787A287
A28787497E87497E87496C85EB7FFC0003B56C84B600FE84A288A288667678F577>78
D<BA12F0F1FF801AF01AFCF2FF80D8003F01F0C86C7F010749030713F04B030013FC6DF0
3FFEF20FFF747F08017F747F757E88757E1B1F881B0F88A2751380A21DC0A287A21DE0AA
1DC0A263A21D80A2511300A2641B1F64515A515A1BFF6408035B5090C7FC505AF23FFCF2
FFF007075B077F138092B848C8FC1AF01A8007F0C9FC03C0CDFCB3B3AB497FA2013F13FC
B8FCA55B7678F56C>80 D<B912FCF0FFF019FEF1FFC01AF8D8003F01F0C7000713FE0107
499139003FFF804B03077F6D050113F0736C7E747EF20FFF747F747F86747F88757EA275
7EA2757EA288A28789A99AC8FCA263A264A2515A641B7F64515A64505B5090C9FC505A50
5AF23FF8F27FE0963801FF80DF0FFECAFCF17FF895380FFFE092B8CBFC19F019FC03C0C7
380FFF80060113E09538003FF8F11FFEF107FF737F7313E0737F747E1A3F87747E1A0F87
8688A3747FAB88AC1F101F38747FA47416787614701B7F496D1BF0756C14E0013F01FC05
1F1401B8707E0907EC03C0756CEB0780759038800F009839007FE03ECF381FFFFC0A075B
9938007FC06D7978F575>82 D<DB3FF815E00203B512C0021F02F81301027F14FE49B712
8049D9C007EBC003D90FFEC7EA3FF0D91FF8913807F807D93FE0EC01FC4948913800FE0F
4948153F4890C9EA1F9F4848EE0FDF49EE07FF484882000F834982121F49177F003F183F
5B191F127F190F5B190712FFA21903A31901A27FA36D1700A2127F7F7F1A006C7E7F7F6C
7F806C7F14F86C7F6CEBFF8015F86CECFF806C15F86DECFF806D15F06D15FF6D16E00103
16F86D16FE6D6C81021F16C0020382DA003F81030781DB007F80040780DC007F7F050F14
801700063F13C07213E018077213F084841AF8197F193F1AFC191FA2190F00E019FE1907
A41903A27EA57E1AFCA27E19077E1AF86C180FA26D18F0191F6D18E06D173F6D18C06DEF
7F806D17FF017E4C13006D6C5E486C6C4B5AD90FF0ED0FF826FC07FC4B5AD901FF4B5A48
6C01F0ECFFC091273FFF800F5B48010F90B548C7FC020315F8020015E048020F14809226
007FF8C8FC477C78F858>I<001FBE12F8A502F8C7000F01F0C7121F4801806E49020113
FC01FCC86C49EC003F491B1F01E01B07491B03491B0190C91800A2003E1D7CA2003C1D3C
A3481D1EA500701D0EA8481D07A6CA1900B3B3B3B14D7F4D7F057F13FE031FB812F8A568
757BF473>I[<B512FEA600FCC7FCB3B3B3B3B3B3B3B3B0B512FEA6>23
172 111 256 43 91 D[<B512FEA6C7127EB3B3B3B3B3B3B3B3B0B512FEA6>23
172 126 256 43 93 D<913803FF80021F13F891B512FE903A03FC01FF80903A07E0003F
E0D91F80EB0FF8013EC76C7E496E7E01F06E7E48486E7F717E4848153F4982D807A06F7E
13FC487E6D6F7E80A2717EA46C90C8FC6C5A6C5ACAFCA6EE07FF0303B5FC157F913903FF
FE07021F138091387FF800903801FFC0010790C7FCEB1FFCEB3FF0EBFFE0485B485B4890
C8FC5B485A485AA2485A1A0E485AA312FF5B170FA4171FA26D153F007F163B177B6DDBF1
FE131C003F16E16C6C14016C6C912603C0FF13386C6CEC0F806C6C6C903A1F007F80706C
6D017CECE1E028007FF803F8EB3FFF011FB500E06D1380010391C7000713009026003FF8
EC01FC474D79CB4F>97 D<14F8EA03FFB5FCA5C6FC133F131FA2130FB3B04CB47E041F13
F8047F13FE923A01FC01FF80923A07E0003FE0031FC7EA0FF0033EEC07FC0378EC01FE4B
6E7EDAF9E06F7EDAFBC06F7EDAFF808292C96C7E737E5C4A707E864A160386851B80A373
13C0A31BE0A31A7FA21BF0AE1BE0A21AFFA31BC0A2611B80A21B0061626E1607626E160F
626E4C5A02F75FDAE7804B5ADAE3C0157FDAC1E04B5ADAC0F04A48C7FC03784A5A4A6CEC
0FF8031F4A5A4A6C6CEB7FC0922703F803FFC8FC0300B512FC010E023F13E090C8D807FE
C9FC4C797BF758>I<ED07FE92387FFFE00203B512FC91390FFC01FF913A3FE0001FC0DA
7F80EB03E0D901FEC812F84948157C494881494881494881013FEE0780494815034948ED
0BC048177F91C9EAFFE048485D00075EA2485AA2485AA27113C0003F70138049EE7F0095
C7FC127FA35BA212FFAE127F7FA4123F7FA2121F6D1738120F19786C6C1770A26C6C17F0
19E06C6D15016C18C06D6C15036D6CED07806EED0F006D6C151E6D6C153ED903FE5D6D6C
15F06D01C0EB03E0DA3FF0EB0FC0DA0FFE01FFC7FC0203B512FCDA007F13E0030790C8FC
3D4D7BCB46>I<191FF07FFF051FB5FCA5EF001F180784A284B3B0ED07FE92387FFFC002
03B512F091390FFC01FC91393FE0001FDAFF80EB07814990C7EA03E1D903FCEC01F14948
EC0079D91FF0153D4948151D4A151F49488101FF824890C9FC48835B0007835B120F5B12
1FA2123F5BA2127FA35BA212FFAE127FA27FA3123FA36C7EA36C7EA200075F7F00035F6C
7E606C6D5D6D6C153D013F16396D6C03797F6D6C15F16D6CDA03E17FD903FEDA078113F0
D900FFDA1F01EBFFF0DA7FC0137E91391FF803F80207B512E0020114809127001FF800EC
80004C797AF758>I<ED1FFC4AB512C0020714F091391FF00FFC91397F8001FFD901FEC7
EA7FC049486E7E49486E7E49486E7E49486E7E49486E7E4948140101FF824890C91380A2
4848EE7FC0A2485A000FEF3FE05BA2001F18F0181F485AA3007F18F8A349160FA212FF90
B9FCA301E0CBFCAB127F7FA3123FA36C7EA219386C7E1978000718707F000318F06C6C17
E018016C6DED03C06D6C1680013F16076D6CED0F006D6C151E6D6C5D6D6C5D6DB44A5A6D
6C6C495ADA3FE0EB1F80DA0FFE01FEC7FC0203B512F8DA007F13E0DB07FEC8FC3D4D7BCB
46>I<EE7FC0923803FFF8030F7F92383FC07F9239FF000F804A48EB3FC04A48137F4A48
EBFFE04A485AEC1FE0143F15C0147F158002FF6D13C0EF7F804990C7EA0C0094C7FCA349
5AB3A9B812C0A5260003FEC9FCB3B3B3A7805B011F13E0001FB612F8A533797DF82F>I<
F103F8F13FFEDB1FF891B5FC92B5903903FC078002079139E007E01F913D1FF00FF81F80
3FC0913B3FC003FC3E0002FFC7B45A49486E5A49486E5A49486E48EB1F8049486E6CEB06
0097C7FC49486E7E013F82A249486E7EA201FF82A24A80A24884AA6C95C8FCA26E5CA201
7F5EA26D6C4A5AA2011F5E6D6C4A5AA26D6C4A5A6D6C4A5A496C4A5A6E4AC9FC903A0F3F
C003FC903A1E1FF00FF80207B512E0D91C0091CAFC013CEB1FF892CCFCA25BA3137CA413
7EA27F8080EB1FF091B612FE6DEDFFF818FF6D17E06D17F8010017FE010383010F84D93F
E0C7000114E001FFC9120FD801FC04017F48489338003FF84848171F4848717E48481707
003F727E49170148CBFC737EA200FE85A76C616C616D1701003F616D17036C6C4D5A6C6C
4D5A6C6C4D5A6C6C4D5A6C6C4D5A26007F80DB01FEC7FCD93FE0ED07FCD90FF8ED1FF0D9
03FFEDFFC0010001F8011F90C8FC021FB612F802011580DA000F01F0C9FC4A707DCC4F>
I<14F8EA03FFB5FCA5C6FC133F131FA2130FB3B0933803FF80041F13F8047F13FE923A01
FC03FF80923A03E0007FE0DB0F80EB1FF0031EC76C7E5D4B6E7E4B6E7E5D14F9DAFBC06E
7E5D14FF92C9FC865CA35CA45CB3B3A8496C4B7FD97FFF030713F0B7D8800FB612F8A54D
787AF758>I<131EEB7F80497E487F487FA66C5B6C5B6D5A011EC7FC90C8FCB3A7EB01F0
EA07FFB5FCA51201EA007F133FA2131FB3B3B3A3497EEBFFFEB612FCA51E727AF12A>I<
ED0780ED1FE0ED3FF0ED7FF8EDFFFCA6ED7FF8ED3FF0ED1FE0ED078092C7FCB3A7167C91
3803FFFC147FA51400151F150FA21507B3B3B3B3A8D80F80EB0FF8EA3FE0487E16F0487E
151F16E016C0153F16806C48EB7F004913FE393F8001FC6C48485A390FF00FF00003B512
C0C691C7FCEB0FF8269487F12F>I<EB01F0EA07FFB5FCA51201EA007F133FA2131FB3B1
0507B512FEA5050114C07149C7FC19F019C0614EC8FC60EF01F04D5A604D5A4DC9FC173E
5F5F4C5A4C5A4C5A4C5A4CCAFC163C5E16FC15014B7E4B7E5D033F7F037C7F5D9139F1F0
7FE09139F3E03FF0ECF7C09139FF801FF8ED000F02FC804A6D7E4A13034A80707F828471
7E173F84717E170F84717EA2717E717FA2717F727EA2727E85181F858585496C83D9FFFC
037F13F0B600FC0103B612C0A54A787AF753>I<EB01F0EA07FFB5FCA51201EA007F133F
A2131FB3B3B3B3B3AC497EEBFFFEB612FEA51F787AF72A>I<D901F0902601FFC0ED0FFE
D807FF021F01FC92B512E0B5027F01FF020314F8922601FC0101C090390FE00FFE922803
E0003FE090391F0001FFDB0F80D91FF8017C6D13C04BC7000F4A147FC6023C912707FC01
E06E7E013F496E6C48486E7E011F0170DA01FF496E7E03F0160790260FF1E04CC8FCDAF3
C06E019E6F7E4B169C02F717BC92C913B802FFDC7FF86F7E4A5FA34A5FA44A5FB3B3A849
6C4C6C4B7ED97FFF030301F8031F13C0B7D88007B600FC013FB612E0A57B4B7ACA86>I<
D901F0903803FF80D807FF021F13F8B5027F13FE923A01FC03FF80923A03E0007FE0DB0F
80EB1FF0031EC76C7EC65C013F496E7E011F496E7E5DEB0FF1DAF3C06E7E5D14F792C9FC
02FF835CA35CA45CB3B3A8496C4B7FD97FFF030713F0B7D8800FB612F8A54D4B7ACA58>
I<ED07FE92387FFFE00203B512FC91390FFC03FF913A3FC0003FC04AC7EA0FE0D901FEEC
07F8D903F8EC01FC49486E7E4948157F49486F7E49486F7E017F8349C96C7E4916070001
844848707EA2000784491601000F84A24848701380A2003F19C0A349177F007F19E0A412
FF1AF0AD007F19E0A26D17FFA2003F19C0A46C6C4C1380A2000F1900A26C6C4C5AA26C6C
4C5A0001606D160F6C606D6C4B5A6D6C4B5AA26D6C4B5AD907F003FEC7FCD903FCEC03FC
6D6C4A5A6D6C6CEB1FF0DA3FE0EB7FC091270FFC03FFC8FC0203B512FCDA007F13E0DB07
FEC9FC444D7BCB4F>I<02F849B47ED803FF021F13F8B5027F13FE923A01FC01FF80923A
07E0003FE0031FC76C7E033EEC0FFCC60278EC03FE013F496E7E90261FF9E06E7FDAFBC0
826DB4486F7E92C96C7E737E5C4A707E864A160786851B80A2851BC0A2851BE0A5F27FF0
AEF2FFE0A54F13C0A34F1380A21B0061626E160F626E161F626E4C5A4F5A6F5EDAFBC015
FFDAF9E04A5BDAF8F04A48C7FC03784A5A6F4A5A031FEC3FF06F6CEBFFC0922603F80790
C8FC0300B512FC043F13E0DC07FEC9FC93CBFCB3A7497EEB7FFFB77EA54C6C7BCA58>I<
DB07FEEC038092387FFFC04AB500F8130791390FFE00FCDA3FF0131FDA7FC0903807800F
494848EB03C04948C7EA01E04948913800F01F494815784948153C013FEE1C3F4948151E
4948150E48491507197F4890C9EA03FF5A5B000F835B121F84485AA35B127FA4485AAE6C
7EA56C7EA3121F7F120F6D5EA200075F6C7E606C7F6C6D5D181E6D6C5D6D6C15386D6C15
786D6C5D6D6C4A5A6D6CEC07C001006D49C6FCDA7FE0133E91391FFC03F80207B512E002
001480DB0FFCC7FC92C9FCB3A74E7F060713F00507B612F0A54C6C7BCA53>I<D903E0EB
1FE0D80FFFECFFFCB501037F923907E01F8092391F807FC092383E00FF4B4813E0000114
78D8007F13F090383FE1E015C0EB1FE39126E7800013C0EF7F8092C7EA3F0002EF91C7FC
14EE14FE5CA45CA55CB3B3A480133F90B5FCB712C0A5334B7ACA3D>I<DA1FFFEB038049
B512E0010FECF807903A3FE001FE0F01FEC7EA1F9FD801F8EC07DFD807E0EC03FF484880
498048C9127F48163F003E161F127E170F127C12FC1707A46C1603A27E7F6C7E7F6D92C7
FCEA3FFC13FF6C13E06C13FF6C14F06CECFF806C15F86C15FE013F6E7E010F15E0010381
010081020F14FEDA007F7F1503DB003F1380040713C0040113E000E081177FEF3FF06C16
1F170FEF07F8A217037E1701A27EA37E18F07E17036D16E0A26D15076DED0FC06D168000
FE161F017CED3F00486C157E6DEC01F826F80FC0EB07F026F003F8EB7FC00100B6C7FC48
013F13FC02071380354D7CCB3E>I<1407A85CA65CA35CA35CA25CA25BA25B5B5B5B5B5B
48B712FE120FB8FCA3D8000190C9FCB3B3A2EF01C0B0EF03806D7FA3027FEC0700815F6E
6C130E021F141E6F131C6E6C5B6E6C13F8913901FF01F09139007FFFC0031F5BDB03FCC7
FC326B7EE93D>I<02F8EE0F80D803FFEE3FFFB5030FB5FCA5C6EE000F013F1603011F82
A2010F82B3B3A660A460A3601307606E150E0103161E606E4B7F010116706D6C03F07F6F
D903E013F86E6C4948EBFFF8DA1FE0EB1F00DA0FFE13FE0203B512F8DA007F13E0030790
C7EBC0004D4C7ACA58>I<B600F84AB512FCA5000191C9003F13C026007FFC040F13006D
4817FC011F715A62010F715A6E5F13074F5A6D7E97C7FC6E5E6D170EA26F151E6D171C81
027F5EA26F1578023F167081021F5EA26F1401020F5E8102074B5AA26F1407020393C8FC
816E150EA270131E6E151C82037F5CA2701378033F147082031F5CA2EEF801030F5CA26F
6C485AA2EEFE07030391C9FCA2705A6F130E178E6F139CA217FC705AA2705AA3705AA270
5AA3705AA24E4B7EC953>I<B600F0017FB500F849B512FCA5000149C849C8003F13E026
007FF8DB3FF8030F13004A031F705A013F4DED03F8180F011F755A735E6D6C1507667315
036D6C63A24E7E6D6C50C7FC85606D6C031C160E866FEC387F6D63866FEC703F027F6286
6FDAE01F1578023F1A70866F902601C00F15F0021F62866F90260380071401020F62866F
90260700031403020762866F010E01011407020397C8FC866F496D5C6E190E053C1580DC
8038027F131E6E191C057815C0DCC070023F133C037F183805F015E07048021F1378033F
187004E116F092261FF1C0020F5BA204F316F892260FFB80913807F9C0A204FF16FD6F90
C86CB45AA36F486F90C9FCA36F486F5AA36F48167CA24C163C047016386E4B7EC973>I<
007FB500FC0203B512FEA5C66C01F06E14C0010F496E01FCC7FC010349ED7FF06D18C06D
60077EC8FC6E6C157C6E6C5D6E6C5D4E5A6E6C5D6E6C14036E6C4A5A4EC9FC6E6D131E6E
7F6F6C5B033F5C705B6F6C5B92380FFC010307495A70485A6F6C48CAFC6F138E6F139E17
FC705A705A161F83707E707E835E4C7F043C7F4C6C7E16709338F03FF04B486C7E4B486C
7E168003076D7E4B486C7E031E6D7F5D03386D7F03786E7E4B6E7E4A48141F4A4881727E
4A486E7E4AC81203021E82023E6F7F027E6F7F4A167F010184010784D91FFE83017FEFFF
FE0007B54B6D7EB600C00207ECFFC0A5524A80C953>I<B600F84AB512FCA5000191C900
3F13C026007FFC040F13006D4817FC011F715A62010F715A6E5F13076E4C5A130397C7FC
6E5E6D170E816D5FA26F153C027F163881023F5EA26F15F0021F5E81020F4B5AA26F1403
02075E8102034BC8FCA26F5C6E150E826E5DA270133C037F143882033F5CA27013F0031F
5C82030F495AA2EEFC0303075C16FE030349C9FCA2705A6F130E178E6F139CA217FC705A
A2705AA3705AA2705AA3705AA294CAFCA25E160EA25EA2163C1638A25EA216F05EA24B5A
120FD83FC01303486C5C486C130793CBFC5D150E5D153C6C485B495B6C48485A383C0003
001F495A260FE03FCCFC3803FFFE6C13F838003FE04E6C7EC953>I
E /Fj 31 119 df<BA12F0B33C137DB74D>45 D<EB1FE0EB7FF83801FFFE0007EBFF8048
14C04814E0A24814F0A24814F8A2B612FCA86C14F8A26C14F0A26C14E0A26C14C06C1480
0001EBFE0038007FF8EB1FE090C8FCB3AEEB1FE0EB7FF83801FFFE0007EBFF804814C048
14E0A24814F0A24814F8A2B612FCA86C14F8A26C14F0A26C14E0A26C14C06C14800001EB
FE0038007FF8EB1FE01E5C6FDB41>58 D[<0303B512E092B712C0020716FC023FEEFF80
91B912E0010318F8010F18FE49DA00076E7E017F01E0D9003F804948C8000F804801F803
03804801E06F804801806F804890CA80737F4813E0486D198080486D7014C08080B6FC1C
E081A76C91C9FC1CC0616C5B6C5B6C4919806C4993B6FC6C491900C66CC95A90CA5D4E5C
4E5C4E5C4E5C4E5C4E5C95B548C7FC4D14F8624D14C04D5C4D49C8FC614D5B4D13E0614D
5B96C9FC4D5A604C5B605E60604C5BA24C90CAFC5FA25F161F5FA34C5AA35FB25F705A93
CCFCB0EE3FC0EEFFF0030313FC4B7F4B7F4B804B804B80A292B67EA24A81A86E5DA26F5C
A26F5C6F5C6F91CAFC6F5B6F5B030013F0EE3FC0>83 144 115 271
110 63 D[<BE12FEF5FFFCF6FFC01FFCF7FF8020E020FC20FF21C0C700030380C8000116
F0E2000F810B0015FE0C1F800C0315C00C00810D3F8079800D0714FE79807981796C808C
7A807A808F7A807A808C8F7A818DA17E8DA17E8DA17EA27B80A2A17E8DA17EA28DA17EA3
A113808DA3A113C0A57B15E0A6A113F0B3A2A113E0A569A113C0A5A11380A269A2A11300
A3575CA2A15AA269A15A69A15AA2575CA15A69A15A9EB6FC5692C7FC6B565C68565C565C
565C565C9DB65A5592C8FC0D075C555C0D3F5C9CB65A0C0315C00C0F5D0C7F92C9FC0B07
B612FC52B712F0C212C09ECAFC20FC20F020800DFCCBFC1FE00CFCCCFC53CDFC>156
142 120 269 178 68 D[<C21280A421C0A5C7000303C0C81201F40007F5007F0C1F14E0
1E071E01787E8B8B8B8B7913F0A28B8BA2207FA3203F21F8201FA4200FA321FC2007A4F4
7FC0A3F803FEA49DC7FCA31CFFA463A263A26363631B7F50B5FC1A1F95B8FCA99538C000
1F1A01747E1B1F878787A287A287A41C7FAA99CBFCB3AFBC12F8A9>127
141 120 268 146 70 D[<BC12F8A9C7000303C0CEFCB3B3B3B3A5F8FF80A4672100A667
A368A21F07A41F0FA3555AA21F3FA21F7FA21FFFA2666668666666666653B5FC65650B1F
5C1D7F0A03B6FC1C1F0903B7FCC1FCA468A5>121 142 120 269
140 76 D[<B900C00C7FB812E0729BB9FC72657265A37265A27265C70003A101F8C8FC72
F51FEFA2706EF43FCFA3706EF47F8FA2706EF4FF0FA2706EF301FEA3706EF303FCA2706E
F307F8A2706EF30FF0A2706EF31FE0A3716EF23FC0A2716EF27F80A2716EF2FF00A2716E
4F5AA3716E4F5AA2716E4F5AA2716E4F5AA3716E4F5AA2726E4E5AA2726E4E5AA2726E4E
C7FCA3726E4D5AA2726E4D5AA2726E4D5AA2726E4D5AA3726E4D5AA2736E4C5AA2736E4C
5AA3736E4CC8FCA2736E4B5AA2736E4B5AA2736E4B5AA3736E4B5AA2736E4B5AA2746E4A
5AA2746E4A5AA3746E4AC9FCA2746E495AA2746E495AA3746E495AA2746E495AA2746E49
5AA2756E485AA3756E485AA2756E48CAFCA275ECF1FEA275ECFBFCA375ECFFF8A2755DA2
755DA3765CA2765CA27691CBFCA2765BA34A6D715B49B512FEB900FC6F490303BB12E0A2
765BA2765BA3775A0B1FC9FC>203 142 120 269 220 I[<97B512F0077FECFFE00607B7
12FE067FEEFFE00503B912FC051FF0FF80057F19E00403BB12FC040F9226E0007F14FF04
3F02FCC7000315C04C02E0DA007F804BB60080031F14F8030702FCC9000314FE4B4A7080
4B02E0706C80037F0280051F14E092B6CB6C804A4A72804A4A72804A02F00600804A4A73
7F4A4A73804A8B4A4A738091B6CD6C80494A7480A2494A7480494A7480498C4C86498D4C
87498D494A7580A290B68B4C87488EA24892CF6C80A3488E4B88A2488EA3484A761580A3
4823C0A5484A7615E0A7B621F0B36C23E0A26F64A56C23C0A46F646C2380A36C23006F64
A26C6AA270636C6AA26C6A70636C6A70636D69A26D6E98B65AA26D6E505DA26D6E5092C7
FC6D6870626D6E505C6D686D6F4F5C6E6E4F5C6E6E4F5CA26E6E96B65A6E6E4E92C8FC6E
6E4E5C020102FF060F14F86E6F4D5C6F6E4D5C6F02F094B65A030F6E4C92C9FC6F02FE04
075C03016E6C031F14F86F03F092B65A043F02FE020715C0040FDAFFF090B7CAFC040392
B812FC04001AF0051F198005074ECBFCDD007F17E0060F94CCFCDE007F15E0070002F0CD
FC>148 146 115 271 175 79 D[<BE12F8F5FFF01EFF1FE01FFCF7FF8020E020F820FE
C700030380C8000781E2003F15C00B03810B00810C3F8078800C07807880788178818E8B
8E8B8E8B8EA28EA28B8EA42380AC2300A46A67A26AA26A676A676A9CB65A6A665492C7FC
545C0C1F5C545C9BB612E00B075D0B3F5D0A07B648C8FC95BB12F820E0208055C9FC1FF0
9CCAFC1EF00BF8CBFC06C0D0FCB3B3B2BCFCA9>137 142 120 269
159 I[<BD12FCF4FFFCF5FFE01EFCF6FFC01FF01FFE797E20E0C700030380C86C15F80A
0181E2003F14FF0B07810B0115E0776C8078807880788078808A78818E7881A28E8B8EA3
7980A48EAA6AA3676AA26AA29CB65AA26A545D9FCAFC66545C545C545C545C9BB612C053
5D0B074ACBFC0B3F5C52B612F00A7F15C095BBCCFC1FF81FC054CDFC66F6FF801FE00680
C7000315F8E1003F14FE0A0F800A0315C07681766C807780778077808C7781898D898D89
8DA38A8DAD8DACA1EB1FC0A1EB3FE08D8AA37880A1137FA114C078817818FF7C1580785F
786F1500BB00FE6F6F5B796E495A7902FEEB1FFC799139FFC07FF80D0792B55A0D015F79
6C5E0E1F5E0E034BC7FCD4001F14F8E7003F13C0>163 144 120
269 173 82 D[<000FC312F8A6488EA304C0C7001F4AC7120103F8C8F0000F03C01C0192
C9737E02FC1E1F4A1E0702E08A4A8A4A8A4890CA757EA249203F49201FA349200FA24920
07A4492003007F8EA4498CA848487A1380A6CC99C7FCB3B3B3B3AA030FBD12FCA9>145
140 120 267 162 84 D[<BB6C010FBA00FC0307B812F8A9C76C02FCCB000703C0CC6CEC
8000786F070001F0C7FC6E6EA1EB3FE0781E7F6E796371A113FF78816E6FA15BA1607980
6E6FA190C8FC79646E796272230779806E6FA15AA1180F79816E6FA15A791C1F6F796172
233F79816F6E4E65A1187F8F6F6E4E65A118FF6F516F6173698F6F6F4D9AC9FCA15F8F6F
6F4D640EDF1A076F09FF6F6073210F0E8F816F6F4C65A1171F0E0781706E4C65556C1A3F
700707715F73217F556C81706E040F65A117FF556C81706F031F65556D6070073F7194CA
FC7467556D80706F037F64A11607556D80706F03FF64556D180F704E735D741F1F9CC76C
81716E4A65A1163F546E81716E020765546E187F71050F735D741FFF546E81716F011F65
A15D546F80716F013F9ACBFC546F5E71057F735C751D07546F80716F01FF64A1150F546F
1580716F48659BC96C161F724B09C05B09FC1D3F537015E072DAFE0765A1157F537015F0
72DAFF0F65537016FF72031F755B0A9F1BF9537114FD7203FF9ACCFCA191B5FC53837268
53837268A253837268A29ACB7E736752847367A252847367A2528473675285739CCDFCA2
52857366A25285736652857366A299CD7E7465A25186083F655186081F655186E007F075
CEFC>229 144 123 269 240 87 D<93B512FC037FECFFF00207B8FC023F17E091B912F8
4918FE0107727E499126C0007F14E04901E0C7000F80496D020380496D020014FE6F6F7F
90B570806F6F8085486E6F807380A27380A28885886C5CA26D4982886D5B6D5B010713C0
010190CAFC90CCFCA90603B7FC050FB8FC0403B9FC167F0307BAFC153F4AB7EA807F020F
EDE000023F02FCC7FC91B612E0010392C8FC4914FC011F14F04914C0495C90B548C9FC48
5C485C485C485C5A5D485CA24891CAFCA3B6FC5CA397B6FCA461806C60F107EF6C6E150F
6F16CF6C183F6FDB7F8F806C6EDBFF0F14E06C02FCDA03FE15FE6C6E91260FFC0791B5FC
6C6E6CD93FF817806C923AF803FFF003013F91B6487E010FEF8000010394C77E010004FC
141F021F03F0140702010380DA007F1400DA000701F8CDFC695F79DD71>97
D<94387FFFF0041FB612E093B712FE0307707E031F17F092B97E4A18FE020784021F9126
F8000F14804A0280010014C04A49C74814E049B500F85C494A17F0494A5C495C494A4A14
F84991C8FC5D495B90B5FC5D5A485C7314F05A4B6F14E05A7314C0487214804B93383FFE
00F20FF84896C8FCA4485CA5B6FCB07EA281A37EA36C80A37E6F18FE6CF201FFA26C6E5F
1CFE6C801B076C6EEF0FFC6D7F70EE1FF86DF13FF06D6E167F6D6EEEFFE06D02F84B13C0
6D6E5D6D02FF030F13806D03C0023F1300023F02F0903801FFFC6E9126FF801F5B020792
B65A6E18C0020060033F4CC7FC030716F8030016C0041F4AC8FCDC007F13C0585F78DD67
>99 D[<F53FE098B6FC4FB7FCA996C77E1B0FA287B3B294383FFF80040FB512FC93B712
80030716E0031F16F8037F16FE4AB9128702074AC66C13C7021F02E0010713F74A91C890
B6FC4A01FC153F49B548150F4902E081494A81494A814991CA7E495B8749498390B54883
5A5D5AA2485CA25A5D5AA35AA25D5AA5B6FCB07EA57E81A37EA27EA2817EA26C80A26C62
6C6E5F636D7F6D6D94B6FC6D606D6D1607705D6D6E4B81010102F0157F6D6E92B712FE6E
01FE020301EF91B512806E6D6C011F13CF020FDAF801B5120F020391B612FE6E17F86E6C
16E0030F16800301EDFC00DB003F14E0040049C74AC8FC>113 144
120 270 129 I<94387FFFC0040FB6FC93B712E0030716FC031F16FF037F17C04AB912F0
0207DAF80380021F912680003F13FE4A49C7000F7F4A01F802038049B5486E804902C06E
6C7F494A6F7F4991C9FC49727F4949707F4B84498490B548707F5A4B198048855D481CC0
86481CE05D5A871DF05AA25D5AA21DF887A2B6FCA392BBFCA51DF00380CDFCA77EA4817E
A37EA2817EA26CF307F06FF00FF87E816C1B1F6F19F06C1B3F6D6DF07FE06D7FF4FFC06D
6E4C13806D6E5E6D02F04C13006D6EEE1FFE6D6E4C5A6D6C01FFEEFFF86E02E002035B6E
02FC021F5B02079126FFC003B55A6E92B7C7FC020060033F17F8030F17E003011780DB00
3F03FCC8FC040315C0DC000F01F8C9FC5D5F7ADD6A>I<F5FFC093260FFFFC030F13F04B
B600E0027F7F031F03FE49B512FE037F9226FF8007800203B8EAF01F020FDDFC3F15804A
7148133F027FDA003F90B500F014C091B500F80107ED807F4902E00101ECFC0001070280
6D6C5B93C87E49496F7F49496F7F49496F6D6D1380491A8077130090B5486F6E6C5AF503
F84875C8FCA2484A6F80A44887AB6C63A46C6E4B5CA26C63A26D6D4B5CA26D97C9FC6D6D
4B5B6D6D4B5B6D6D4B5B705C010102E049B512E06D02F801075C4902FF013F5C4992B648
CAFC496002F317F090260FE07F1680031F4BCBFC90261FC00115E0DB000F01FCCCFC013F
91CFFCA3137FA280A380A28080806E7E15F092B812F06DF0FFE01BFEF3FFC06D1AF81CFE
767E6D1BE06D87896D1BFE6D877F6E878A0103BD7E130F013F8890BEFC4802E0C9003F81
4891CBFC4801FC180F48490601804849727E484985884849737F88A2B55A88A66E616C65
A26E616C6D4F5B6C656E616C6D4F5B6C6D96B55A6C6D6C05035C6F5FC602F0051F49C7FC
6D01FC057F5B6DD9FF800303B55A010F02F8033F14E06DDAFFE0010FB65A010192B9C8FC
D9003F19F8020F19E0020196C9FCDA001F17F0030194CAFCDB000192CBFC6A887ADD74>
103 D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B2963803FFFC073FEBFFE096B612
F8060715FE061F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF880DD1F
E0824D486E804D5A05FEC881DCF1FC815F04F385EEF7F04D81EEFFC0A24D84A294C9FCA2
5EA35EA45EB3B3AFB9D8E001B912C0A9>114 143 119 270 129
I[<EC3FC0ECFFF0010313FC497F497F498049804980A290B67EA24881A86C5DA26D5CA2
6D5C6D5C6D91C8FC6D5B6D5B010013F0EC3FC091CAFCB3A3ED1FF0017FB5FCB7FCA9EA00
3F1307A27FB3B3B3B0B91280A9>49 144 119 271 65 I[<EF03FCEF0FFF053F13C04D7F
94B57E4C804C804C80A24C80A24C1580A8701500A2705CA2705C705C705C715B715B050F
90C7FCEF03FC94C9FCB3A3F1FF800407B6FC031FB7FCA9ED0001707E8383B3B3B3B3B113
7F3801FFC0000713F0487F487F487F1A00486D5CA2B66C5DA25F616194B5FC61A26C4A48
5C4C5C6C495E4A4991C7FC6C49495B6C49013F5B6C01FE90B512F06C90B75A6C17806C6C
4BC8FC011F15F8010715E0010092C9FC020F13E0>65 185 140 271
71 I[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3083FB712C0A908014AC7FCE0003F
13C09AC8FC515A515A505B5013E0080F5B505B5090C9FCF27FFC4F485A4F5B4F5B4F5B4F
90CAFCF17FFE4F5A4E5B4E5B4E13C0061F5B4E90CBFC4E5AF0FFF805037F5F4D7F4D7F4D
8094B67E16F104F38104F78193B77EA2868605F18017E04D814D6C804D6C8004FC6D805E
4C6D804C6D807280A27280728173808588738073807380A2738073807381A27480748074
808689748074807480A274818A5015F0B96C017F92B5FCA9>112
143 121 270 123 I[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B3B3B3ACB912
C0A9>50 143 119 270 65 I<DB3FE0912601FFFC943801FFFC017FB5031FD9FFE0041F
EBFFE0B792B600FC93B612FC060303FF030315FF060F04C0020F16C0063F04F0023F16F0
95B86C91B87E4DD9FC036E49D9FC03804DD9C0006E49D9C000804D48C7003F6D4948C700
3F7FDD0FF86EDB0FF880D8003F4B48714848830107DB3FC06E9126C03FC06E804D484E5A
6D4BC86F48C881DCE1FE6FDAE1FE814D61DCE3F8DEF3F884DCE7F0F0F7F04D6F4B81DCEF
C0F0FFC0A2DCFF804F84A294C993C9FCA24C61A34C61A44C61B3B3AFB900E090B900E090
B912E0A9B35D77DCC2>I<DB3FE0913803FFFC017FB5033FEBFFE0B792B612F8060715FE
061F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF880D8003FDB1FE082
01074B486E804D5A6D03FEC881DCE1FC815F04E385EEE7F04D81EEEFC0A2DCFF8084A294
C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9725D77DC81>I<94381FFFF00407B612C0
047F15FC0303B87E030F17E0037F17FC4ABAFC4A9126FC007F80020F02C0010714E04A49
C880027F01F8033F13FC91B5486F7F4902C003077F494A6F804991C96C80494970804949
717F49874949717FA290B548717F48884B83481D80A2481DC04B83481DE0A2481DF0A348
4A7114F8A4481DFCA5B61BFEAF6C1DFCA56C6E4D14F8A36C1DF0A36C1DE06F5F6C1DC0A2
6C6E4D1480A26C1D006F5F6C646D6D4D5B6F94B5FC6D636D6D4C5C6D6E4B5C6D6E4B5C6D
02F0031F5C6D6E4B91C7FC6D6C01FE92B512FC6ED9FFC001075C6E02FC017F5C020791B8
12C0020196C8FC6E6C17FC031F17F003031780DB007F03FCC9FC040715C0DC001F01F0CA
FC675F7ADD74>I<DB1FF091381FFFC0017FB50203B6FCB7021F15E095B712FC050316FF
050F17C0053F17F094B912FC04F1DAC01F8004F79026FC00018093B500E06D6C14C0D800
3F93C86C8001074B030F8005F86F806D03E06F804D6F804D8194CA6C7F4C864C71805E76
80A27680A27680A28B88A28BA288A28BA4882080B0200064A467A26467A3525CA2676467
6467647062704D91C7FC7094B55AA2714B5C714B5C714B5C05F84B5C71033F5C05FF4B91
C8FC06C049B55A04FB01F001075C04F801FF017F14F07190B712C0051F94C9FC7116FC05
0316F0DD007F1580060F02F8CAFC060049CBFC96CDFCB3ACB912E0A9718579DC81>I<DB
7FC049B47E90B6021F13F8B7027F13FE4DB67E4D15E04D814D814D01077F94263FF00F7F
94387FC01F4D48487FD8003F16000107DAC1FE491480EEC3FC6D5DEEC7F05F16CF5F16DF
4D6D1400A204FFC76C5BA2735B4C6E5B735B070013C04C92C8FCA45EA65EB3B3AAB912FC
A9515D79DC5F>114 D<92261FFFF814F80203B638C001FC023FEDFC0791B8121F010317
FF130F013F9038F8001F4990C8FCD9FFF8153F4801E0150F484915034849814890CAFC19
7F4848173F191F485AA2007F180FA31907487EA27FA28002E0705A6E93C8FC14FC14FF15
F06CECFF8016FCEEFFF06CEEFF8018F06C17FE727E6C18E0856C18FC6C846C727E6C856D
84011F846D841303010084023F83140F020183EC001FDB007F16801603DC000F15C01700
183F060F14E0007F1703486C82727E857F85857FA2857F1BC07FA27F1B806D5F7F1B006E
5E6E5F6E163F6E4C5A02FC4C5A6E03035B6E6C4A5B03F0023F5B03FF0107B55A01F991B7
C7FCD9F07F16FCD9E01F16F0D9800716C0D9000193C8FC48D9003F14F8007C020349C9FC
4B5F78DD5C>I[<ED03FEA81507A5150FA4151FA3153FA2157FA215FFA25CA25C5CA25C5C
5C5C91B5FC13035B131F017F91B712F00007BAFCBBFCA7C74AC9FCB3B3AAF101FFB1616E
17FE82A219076E17FC836EEE0FF871131F6E6EEB3FF071137F6E6EEBFFE06EDAFF0313C0
6E92B512806E1700033F5D6F5D03075D030015E0041F1480040001FCC7FC>72
132 124 258 90 I<DB0FF8F01FF0017FB594B6FCB74BB7FCA9D8003F94C77E0107190F
A26D85B3B3B063A463A263A27F6398B6FCA26DF001FB7015036EEF07F3E00FE3806E6D15
1FE07FC314FF6E6D6CDAFF83EDFFC06E6E010313036E02FCEB3FFE6E91B612FC020017F8
6F16E0031F16800303EDFE00DB007F14F8040102C093C8FC725E77DC81>I<B90303B7FC
A9D8000702F8CA000FEBFE006D6E050013E0666D6E6164826D5090C7FC836E4F5AA26E6E
4C5AA26E6E4C5AA26E6E5F1C3F836E4F5A836E4F5AA26E6E4B5BA26E6E4B90C8FCA26F6E
5D1B07846F4D5A846F4D5AA26F6E4A5AA26F6E4A5AA26F6E5D1BFF846F4C5B846F4C90C9
FCA2706E485AA27002C05B1A0F7002E05B1A1F19F0704B5A19F8704B5AA2706E485AA270
6E5B96B5FC7093CAFCA3715CA2715CA2715CA2715CA3715CA2715CA2715CA27191CBFCA2
725AA3725A725A725A705D7BDB7B>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

userdict/PStoPSxform PStoPSmatrix matrix currentmatrix
 matrix invertmatrix matrix concatmatrix
 matrix invertmatrix put
%%EndSetup
%%Page: (0,1,2,3) 1
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
28.346457 426.883676 translate
0.452359 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
2 1 bop -70 271 a Fj(What)78 b(Must)g(DLL)f(Proto)6 b(cols)78
b(Do?)p -120 583 3894 4 v -120 1528 a Fi(The)52 b(three)g(basic)g
(things:)-40 2038 y Fh(\017)42 b Fi(DLL)50 b(proto)t(cols)i(m)l(ust)d
(main)l(tain)i Fd(reliable)i Fi(service)f(to)f(the)88
2245 y(net)l(w)l(ork)g(la)l(y)l(er:)70 b(using)53 b(error)f(detection)g
(and)g(A)l(CK.)-40 2668 y Fh(\017)42 b Fi(DLL)52 b(proto)t(col)h(m)l
(ust)d Fd(not)i Fi(pass)g(on)f(duplicate)j(pac)l(k)l(ets)d(to)88
2875 y(the)g(net)l(w)l(ork)h(la)l(y)l(er:)70 b(using)53
b(unique)g(sequence)f(n)l(um)l(b)t(ers.)-40 3297 y Fh(\017)42
b Fi(DLL)52 b(proto)t(col)h(m)l(ust)d(b)t(e)i Fd(e\016cien)-5
b(t)p Fi(:)72 b(using)53 b(piggybac)l(king)88 3505 y(A)l(CKs)e(and)h
(sliding)j(windo)l(w)d(proto)t(cols.)-120 5851 y Fg(2)716
b(Lecture)26 b(slides)g(for)h(433-353)g Ff(Computer)i(Networks)p
Fg(,)2250 5849 y(c)2229 5851 y Fe(\015)42 b Fg(all)27
b(righ)n(ts)f(reserv)n(ed)g(b)n(y)e(Zhi-Qiang)i(LIU,)f(2000)p
eop
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
297.500000 426.883676 translate
0.452359 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
3 2 bop -70 271 a Fj(P)-6 b(ac)g(k)g(ets)76 b(vs)g(F)-19
b(rames)p -120 583 3894 4 v -120 1237 a Fi(P)l(ac)l(k)l(et)51
b(is)i(the)f(data)g(from)f(the)h(Net)l(w)l(ork)g(La)l(y)l(er)f(\(NL\))i
(that)-120 1445 y(gets)f(framed)f(\(wrapp)t(ed\))h(at)g(the)g(Data)g
(Link)h(La)l(y)l(er)f(\(DLL\).)-120 4035 y @beginspecial
69 @llx 295 @lly 525 @urx 546 @ury 4672 @rwi @setspecial
%%BeginDocument: figures/dll_figs/packetFrame.ps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.439 0.533 1.000 srgb} bind def
/col33 {0.973 0.941 0.973 srgb} bind def
/col34 {0.878 0.816 0.753 srgb} bind def

end
save
50.5 560.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 5197 m -1000 -1000 l 8527 -1000 l 8527 5197 l cp clip
 0.06299 0.06299 sc
% Polyline
7.500 slw
n 1305 3285 m 4770 3285 l 4770 4185 l 1305 4185 l cp gs 0.00 setgray ef gr gs col0 s gr 
% Polyline
n 1125 2070 m 630 2070 l 630 1890 l 315 2250 l 630 2610 l 630 2430 l
 1125 2430 l 1125 2070 l  cp gs col34 1.00 shd ef gr gs col7 s gr 
% Polyline
n 1260 3240 m 4725 3240 l 4725 4140 l 1260 4140 l cp gs col7 1.00 shd ef gr gs col0 s gr 
/Times-Bold ff 240.00 scf sf
6930 2340 m
gs 1 -1 sc (Flag) col0 sh gr
/AvantGarde-Demi ff 240.00 scf sf
1710 3645 m
gs 1 -1 sc (Frame addressing) col0 sh gr
/AvantGarde-Demi ff 240.00 scf sf
1440 4005 m
gs 1 -1 sc (and control information  ) col0 sh gr
% Polyline
n 3150 270 m 6075 270 l 6075 990 l 3150 990 l cp gs col0 s gr 
% Polyline
 [60] 0 sd
n 3150 990 m 3150 1890 l gs col0 s gr  [] 0 sd
% Polyline
 [60] 0 sd
n 6075 990 m 6075 1890 l gs col0 s gr  [] 0 sd
% Polyline
n 1125 1890 m 1845 1890 l 1845 2610 l 1125 2610 l cp gs col0 s gr 
% Polyline
n 6795 1890 m 7515 1890 l 7515 2610 l 6795 2610 l cp gs col0 s gr 
% Polyline
n 3150 1890 m 6075 1890 l 6075 2610 l 3150 2610 l cp gs col0 s gr 
/Times-Bold ff 240.00 scf sf
1980 2160 m
gs 1 -1 sc (Link layer) col0 sh gr
% Polyline
n 1845 1890 m 3150 1890 l 3150 2610 l 1845 2610 l cp gs col0 s gr 
/Times-Bold ff 240.00 scf sf
4140 855 m
gs 1 -1 sc (\(packet\)) col0 sh gr
/Times-Bold ff 240.00 scf sf
6210 2340 m
gs 1 -1 sc (CRC) col0 sh gr
% Polyline
n 6075 1890 m 6795 1890 l 6795 2610 l 6075 2610 l cp gs col0 s gr 
/Times-Bold ff 240.00 scf sf
1260 2340 m
gs 1 -1 sc (Flag) col0 sh gr
% Polyline
n 2385 3240 m 2700 3240 l gs col7 s gr 
/Helvetica ff 210.00 scf sf
540 405 m
gs 1 -1 sc (L3:) col0 sh gr
/Helvetica ff 210.00 scf sf
945 405 m
gs 1 -1 sc (Network Layer) col0 sh gr
% Polyline
n 2741 3285 m 2749 3285 l gs col7 s gr
/Helvetica ff 210.00 scf sf
585 1710 m
gs 1 -1 sc (L2: Data Link Layer) col0 sh gr
% Polyline
n 2700 3240 m 2295 2655 l 2385 3240 l gs col0 s gr 
/Times-Bold ff 240.00 scf sf
1890 2475 m
gs 1 -1 sc (information) col0 sh gr
/Times-Bold ff 240.00 scf sf
3510 540 m
gs 1 -1 sc (Network Layer Data) col0 sh gr
$F2psEnd
rs
showpage
%%EndDocument
 @endspecial 1816 x Fg(3)716 b(Lecture)26 b(slides)g(for)h(433-353)g
Ff(Computer)i(Networks)p Fg(,)2250 5849 y(c)2229 5851
y Fe(\015)42 b Fg(all)27 b(righ)n(ts)f(reserv)n(ed)g(b)n(y)e(Zhi-Qiang)
i(LIU,)f(2000)p eop
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
28.346457 34.230133 translate
0.452359 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
4 3 bop -70 251 a Fj(Rejecting)78 b(Duplated)g(P)-6 b(ac)g(k)g(ets)p
-120 583 3894 4 v -120 1537 a Fi(DLL)52 b(proto)t(col)h(rejects)f(\(on)
g(the)g(receiv)l(er)h(side\))g(an)l(y)f(frame)-120 1745
y(that)g(has)g(a)g(sequence)g(n)l(um)l(b)t(er)e(that)i(is)h(not)f(what)
f(w)l(as)-120 1952 y(exp)t(ected.)-120 5851 y Fg(4)716
b(Lecture)26 b(slides)g(for)h(433-353)g Ff(Computer)i(Networks)p
Fg(,)2250 5849 y(c)2229 5851 y Fe(\015)42 b Fg(all)27
b(righ)n(ts)f(reserv)n(ed)g(b)n(y)e(Zhi-Qiang)i(LIU,)f(2000)p
eop
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
297.500000 34.230133 translate
0.452359 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
5 4 bop 3774 5087 a
 gsave currentpoint currentpoint translate 90 neg rotate neg exch neg
exch translate
 3774 5087 a 3942 3971 a
 currentpoint currentpoint translate 1.31207 1.31207 scale neg exch
neg exch translate
 3942 3971
a @beginspecial 69.738312 @llx 495.141998 @lly 497.134552
@urx 749.188721 @ury 4274 @rwi @clip @setspecial
%%BeginDocument: figures/tanen-figs/figs4ch3/fig3-14.ps

/devps 180 dict def devps begin
/res 10.000000 def
/y_offset 843 def
/X{exch}bind def
/mm {transform round X round X itransform} bind def
/r{rmoveto}bind def
/m{moveto}bind def
/l{lineto}bind def
/rl{rlineto}bind def
/st{stroke}bind def
/gs{gsave}bind def
/gr{grestore}bind def
/cp{currentpoint}bind def
/np{newpath}bind def
/ct{curveto}bind def
systemdict /setpacking known
 { /savepacking currentpacking def true setpacking } if
/m0{0 0 moveto}bind def
/xc{//res div}bind def
/yc{//res neg div //y_offset add}bind def
/lc{yc X xc X l st}bind def
/mc{yc X xc X m}bind def
/el{gs /a X def a div 1 X scale cp np a xc 2 div 0 360 arc st gr}bind def
/ar{cp 7 2 roll np xc 5 1 roll atan 3 1 roll atan X arc st}bind def
/sp{yc X xc X 6 2 roll yc X xc X 6 2 roll yc X xc X 6 2 roll ct}bind def
/V{//res neg div //y_offset add
currentpoint pop X
m}bind def
/H{//res div
0 transform X round X itransform pop
currentpoint X pop
moveto}bind def
/h{//res div 0 r}bind def
/v{//res neg div 0 X r}bind def
/S{X H show}bind def
/A{H //res div 1 index stringwidth pop sub 1 index length div 0 3 2 roll ashow}bind def
/psize 10 def
/height 0 def
/cheight { height 0 ne { height } { psize } ifelse } bind def
/slant 0 def
/FF{findfont X dup 30 div 0 mm pop setlinewidth /psize X def
    [psize 0 cheight slant sin slant cos div mul cheight 0 0]
    makefont setfont}bind def
/shade{gs
 /dy X def
 /dx X def
 np m
 0 /dy rl
 /dx 0 rl
 0 /dy neg rl
 /dx neg 0 rl
 closepath
 .9 setgray
 fill
gr}bind def
1 setlinecap

/resolution res 72 mul def


/startFig {
	/SavedState save def
	userdict maxlength dict begin
	currentpoint transform

	DocumentInitState setmiterlimit setgray setdash setlinejoin setlinecap
		setlinewidth setmatrix

	itransform moveto

	/ury exch def
	/urx exch def
	/lly exch def
	/llx exch def
	/y exch 72 mul resolution div def
	/x exch 72 mul resolution div def
	
	currentpoint /cy exch def /cx exch def

	/sx x urx llx sub div def
	/sy y ury lly sub div def

	sx sy scale

	cx sx div llx sub
	cy sy div ury sub translate
	
	/DefFigCTM matrix currentmatrix def

	/initmatrix {
		DefFigCTM setmatrix
	} def
	/defaultmatrix {
		DefFigCTM exch copy
	} def

	/initgraphics {
		DocumentInitState setmiterlimit setgray setdash 
			setlinejoin setlinecap setlinewidth setmatrix
		DefFigCTM setmatrix
	} def

	/showpage {
		initgraphics
	} def

}bind  def
/clipFig {
	currentpoint 6 2 roll
	newpath 4 copy
	4 2 roll moveto
	6 -1 roll exch lineto
	exch lineto
	exch lineto
	closepath clip
	newpath
	moveto
}bind  def
/doclip { llx lly urx ury clipFig } def
/endFig {
	end SavedState restore
}bind  def
/globalstart {
	fontnum psize slant height resolution currentpoint 
	pagesave restore gsave 
}bind  def
/globalend {
	grestore moveto
	/resolution exch def /height exch def
	/slant exch def /psize exch def /fontnum exch def
	F
	/pagesave save def
}bind  def


/fontnum 1 def 
systemdict /setpacking known { savepacking setpacking} if
end
/BP{
save mark devps begin m0
/DocumentInitState [ matrix currentmatrix currentlinewidth currentlinecap
currentlinejoin currentdash currentgray currentmiterlimit ] cvx def
}bind def
/EP{
end cleartomark restore showpage}def

/Encoding-1 256 array def
0 1 255 {Encoding-1 exch /.notdef put} for
Encoding-1 8#301 StandardEncoding 8#101 26 getinterval putinterval %A-B
Encoding-1 8#341 StandardEncoding 8#141 26 getinterval putinterval %a-b
Encoding-1 8#241 StandardEncoding 8#301 16 getinterval putinterval %accents
Encoding-1 8#373 StandardEncoding 8#365 1 getinterval putinterval %dotlessi
Encoding-1
dup 8#41 /copyright put
dup 8#42 /registered put
dup 8#43 /trademark put
dup 8#44 /logicalnot put
dup 8#45 /Eth put
dup 8#46 /eth put
dup 8#47 /Thorn put
dup 8#50 /thorn put
dup 8#51 /brokenbar put
dup 8#52 /degree put
dup 8#53 /divide put
dup 8#54 /multiply put
dup 8#55 /minus put
dup 8#56 /onehalf put
dup 8#57 /onequarter put
dup 8#60 /threequarters put
dup 8#101 /Aacute put
dup 8#102 /Acircumflex put
dup 8#103 /Adieresis put
dup 8#104 /Agrave put
dup 8#105 /Aring put
dup 8#106 /Atilde put
dup 8#107 /Ccedilla put
dup 8#110 /Eacute put
dup 8#111 /Ecircumflex put
dup 8#112 /Edieresis put
dup 8#113 /Egrave put
dup 8#114 /Iacute put
dup 8#115 /Icircumflex put
dup 8#116 /Idieresis put
dup 8#117 /Igrave put
dup 8#120 /Ntilde put
dup 8#121 /Oacute put
dup 8#122 /Ocircumflex put
dup 8#123 /Odieresis put
dup 8#124 /Ograve put
dup 8#125 /Otilde put
dup 8#126 /Scaron put
dup 8#127 /Uacute put
dup 8#130 /Ucircumflex put
dup 8#131 /Udieresis put
dup 8#132 /Ugrave put
dup 8#133 /Ydieresis put
dup 8#134 /Zcaron put
dup 8#135 /aacute put
dup 8#136 /acircumflex put
dup 8#137 /adieresis put
dup 8#140 /agrave put
dup 8#141 /aring put
dup 8#142 /atilde put
dup 8#143 /ccedilla put
dup 8#144 /eacute put
dup 8#145 /ecircumflex put
dup 8#146 /edieresis put
dup 8#147 /egrave put
dup 8#150 /iacute put
dup 8#151 /icircumflex put
dup 8#152 /idieresis put
dup 8#153 /igrave put
dup 8#154 /ntilde put
dup 8#155 /oacute put
dup 8#156 /ocircumflex put
dup 8#157 /odieresis put
dup 8#160 /ograve put
dup 8#161 /otilde put
dup 8#162 /scaron put
dup 8#163 /uacute put
dup 8#164 /ucircumflex put
dup 8#165 /udieresis put
dup 8#166 /ugrave put
dup 8#167 /ydieresis put
dup 8#170 /zcaron put
pop

/Enc-dict 30 dict def
Enc-dict /tmpstr1 50 string put
Enc-dict /tmpstr2 50 string put
Enc-dict /tmpstr3 50 string dup (Encoding-) exch cvs pop put
/AEnc-def { % arguments: the original font's name, encoding nr
Enc-dict begin
tmpstr2 cvs /Enc-no exch def % Remember the number in a string
dup /OrigName exch def % remember the name
findfont dup maxlength dict /newdict exch def % get dictionary for new font
{ exch dup /FID ne
   { exch newdict 3 1 roll put }
   { pop pop } % Ignore FID
   ifelse
} forall
newdict begin
/Encoding
  tmpstr3 9 Enc-no putinterval tmpstr3 0 9 Enc-no length add getinterval
  cvn load
  def % Replace encoding
currentdict /UniqueID known
{ /UniqueID UniqueID Enc-no cvi 49999 mul add def } if % Derive New UniqueID
end % newdict
/FNlength OrigName tmpstr1 cvs length def % convert name, remember length
FNlength 1 add Enc-no length add string
dup 0 OrigName tmpstr1 cvs putinterval
dup FNlength (-) putinterval
dup FNlength 1 add Enc-no putinterval
dup 0 tmpstr1 0 FNlength getinterval putinterval % Add old name
cvn dup newdict /FontName 3 2 roll put newdict definefont
end % Enc-dict
} def
/Times-Roman 1 AEnc-def pop
/R-1{/Times-Roman-1 FF}def
/R{/Times-Roman FF}def
/I{/Times-Italic FF}def
/HB{/Helvetica-Bold FF}def
/L{/Helvetica FF}def
/altRTD 20 dict def
altRTD begin
/s{setcachedevice}bind def
/m{moveto}bind def
/c{curveto}bind def
/S{stroke}bind def
/l{lineto}bind def
end
/F_Troff 17 dict def F_Troff begin
systemdict /currentpacking known
{/SavePacking currentpacking def true setpacking}if
/PaintType 0 def
/FontType 3 def
/StrokeWidth 25 def
/UniqueID 8277030 def
/FontMatrix [.001000 0 0 .001000 0 0] def
/FontBBox [-85 -150 1000 1000 ] def
/Encoding 256 array def
/CD 256 1 add dict def
/FontInfo 3 dict def FontInfo begin
/UnderlinePosition -133 def /UnderlineThickness 20 def end
/FontName (Troff) def
0 1 256 1 sub{Encoding exch /.notdef put}for
CD /.notdef{500 0 setcharwidth{}}put
Encoding (1) 0 get /br put
CD /br{
0 0 -500 -500 1000 1000 s
np
clw
0 -100 m
0 900 l
{S}
}put
Encoding (2) 0 get /ul put
CD /ul{
500 0 0 -200 500 0 s
np
clw
0 -100 m
500 -100 l
{S}
}put
Encoding (3) 0 get /ru put
CD /ru{
500 0 -500 -500 1000 1000 s
np
clw
m0
500 0 l
{S}
}put
Encoding (4) 0 get /vr put
CD /vr{
0 0 -500 -500 1000 1000 s
np
clw
m0
0 1000 l
{S}
}put
Encoding (5) 0 get /sq put
CD /sq{
500 0 0 0 500 1000 s
np
m0
0 500 rl
500 0 rl
0 -500 rl
-500 0 rl
closepath
61 61 m
378 0 rl
0 378 rl
-378 0 rl
closepath
{fill}
}put
Encoding (6) 0 get /bx put
CD /bx{
500 0 0 0 500 1000 s
np
m0
0 500 rl
500 0 rl
0 -500 rl
closepath
{fill}
}put
Encoding (7) 0 get /rn put
CD /rn{
500 0 -500 -500 1000 1000 s
np
30 setlinewidth
-30 900 m
500 0 rl
{S}
}put
Encoding 120 /rc put
CD /rc {
494 0 -85 -80 255 926 s
201 -80 m 201 872 l -85 872 l -85 926 l 255 926 l 255 -80 l
closepath {fill}
} put
Encoding 121 /lc put
CD /lc {
491 0 201 -80 541 926 s
201 -80 m 201 926 l 541 926 l 541 872 l 255 872 l 255 -80 l
closepath {fill}
} put
Encoding 122 /rf put
CD /rf {
494 0 -85 -80 255 926 s
-85 -80 m -85 -26 l 201 -26 l 201 926 l 255 926 l 255 -80 l
closepath {fill}
} put
Encoding 123 /lf put
CD /lf {
494 0 201 -80 541 926 s
201 -80 m 201 926 l 255 926 l 255 -26 l 872 -26 l 872 -80 l
closepath {fill}
} put
Encoding 97 /a put
CD /a{5 setlinewidth 1000 0 0 66 942 421 s 430 415
m 578 406 678 349 662 319 c 655 306 614 287 583
296 c 570 300 466 340 438 332 c 365 309 335 213
270 209 c 0 310 m 108 310 l 108 114 l 0
114 l 0 310 l 42 161 m 42 134 l 66 134 l 66
161 l 42 161 l 47 155 m 47 140 l 62 140 l 62
155 l 47 155 l 110 133 m 226 113 300 66 410
80 c 497 91 550 69 634 76 c 645 76 663 92 669
107 c 677 125 673 141 668 160 c 725 334 m 758
332 734 253 701 250 c 501 325 m 475 316 476 309
473 302 c 465 282 482 263 499 257 c 552 236 615
253 689 253 c 701 253 713 236 713 218 c 712 194
702 168 678 161 c 671 159 663 160 655 160 c 591
158 516 156 479 168 c 461 173 453 191 453 210 c 453
224 456 235 466 244 c 476 253 490 252 503 255 c 459
84 m 447 96 435 106 435 123 c 435 136 440 145 447
155 c 453 163 462 168 469 173 c 110 293 m 173
318 300 421 435 415 c 609 407 852 416 885 411 c 898
409 924 411 930 380 c 942 316 828 339 742 334 c 731
334 730 335 725 335 c 701 336 685 336 660 336 c{S}}put
Encoding 98 /b put
CD /b{5 setlinewidth 1000 0 -12 66 930 421 s 500
415 m 352 406 252 349 268 319 c 275 306 316 287
347 296 c 360 300 464 340 492 332 c 565 309 595
213 660 209 c 930 310 m 822 310 l 822 114 l 930
114 l 930 310 l 888 161 m 888 134 l 864 134
l 864 161 l 888 161 l 883 155 m 883 140 l 868
140 l 868 155 l 883 155 l 820 133 m 704 113
630 66 520 80 c 433 91 380 69 296 76 c 285 76
267 92 261 107 c 253 125 257 141 262 160 c 205
334 m 172 332 196 253 229 250 c 429 325 m 455
316 454 309 457 302 c 465 282 448 263 431 257 c 378
236 315 253 241 253 c 229 253 217 236 217 218 c 218
194 228 168 252 161 c 259 159 267 160 275 160 c 339
158 414 156 451 168 c 469 173 477 191 477 210 c 477
224 474 235 464 244 c 454 253 440 252 427 255 c 471
84 m 483 96 495 106 495 123 c 495 136 490 145 483
155 c 477 163 468 168 461 173 c 820 293 m 757
318 630 421 495 415 c 321 407 78 416 45 411 c 32
409 6 411 0 380 c -12 316 102 339 188 334 c 199
334 200 335 205 335 c 229 336 245 336 270 336 c{S}}put
Encoding 99 /c put
CD /c{710 0 0 0 700 700 s
33 setlinewidth
335 23 m 335 325 302 -90 270 arc
{S}}put
Encoding 100 /d put
CD /d{590 0 134 158 477 500 s 300
160 m 208 162 134 238 135 330 c 136 423 212 500
305 500 c 397 500 473 427 475 335 c 477 239 396
158 300 160 c{fill}}put
Encoding 101 /e put
CD /e { % produces the VU symbol
760 0 0 0 750 750 s
267 267 scale
0 setlinejoin
.045 setlinewidth
0 setlinecap
3 setmiterlimit
newpath
0 0 moveto
0 2.8 rlineto
0.38 0 rlineto
0 -2.3 rlineto
0.02 0 rlineto
0.67 2.3 rlineto
0.38 0 rlineto
-0.83 -2.8 rlineto
closepath
1.61 2.8 moveto
0.38 0 rlineto
-0.687 -2.32 rlineto
-.03 -.1 -0.03 -0.1 0 -0.1 rcurveto
1.027 0 rlineto
0 2.42 rlineto
0.38 0 rlineto
currentpoint pop 0 % x 0
2.0 0
0.28 arcto
4 {pop} repeat
0.78 0 1.61 2.8 0.15 arcto
4 {pop} repeat
closepath
{S}} put
/BuildChar{altRTD /BuildChar get exec}def end
altRTD begin /BuildChar{altRTD begin
/char exch def /fontdict exch def save
/charname fontdict /Encoding get char get def
/clw { 37 0 mm pop setlinewidth}bind def
fontdict /StrokeWidth get setlinewidth
0 setlinecap
0 setlinejoin
fontdict /CD get dup charname known
{charname}{/.notdef}ifelse get newpath exec
fontdict /PaintType get 0 eq{exec}{pop S}ifelse
restore end}def end
systemdict /currentpacking known{F_Troff /SavePacking get setpacking}if
/Troff F_Troff definefont pop
/Y1{/Troff FF}def
/Y{/Symbol FF}def
BP
/slant 0 def
/height 0 def
916 V
720 H
4320 
2165 
118.00 
302.00 
495.00 
491.00 
startFig 
%AI5_FileFormat 1.1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 125.5 305.5 677.5 1035.5
%AI3_DocumentPreview: Header
%AI5_ArtSize: 360 180
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 66 528 2 1114 813 25 0 1 3 42
%AI5_OpenViewLayers: 5
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	/gt38? version cvx exec 38 gt def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 48 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
	exch findfont exch scalefont setfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
} def
currentdict readonly pop
end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	_pola 0 eq
	{
		newpath
	} if
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[
	] 0 setdash
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	version cvx exec 38 gt
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 0 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
0 R
0 G
800 Ar
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
305.9744 324.817 m
305.9744 486 l
S
U
u
u
0 O
0 g
1 w
304.5818 327.6553 m
305.9583 322.5 L
307.3444 327.6553 L
304.5818 327.6553 L
f
U
u
0 R
0 G
0.5 w 1 M
305.9583 327.3428 m
305.9583 324.5812 L
S
U
U
0.8 w 4 M
225.7373 471.7227 m
192.9156 481.2304 l
S
u
u
0 O
0 g
1 w
222.6237 471.1748 m
227.9583 471.0625 L
223.3923 473.8283 L
222.6237 471.1748 L
f
U
u
0 R
0 G
0.5 w 1 M
223.3068 472.41 m
225.9593 471.6416 L
S
U
U
0.8 w 4 M
225.664 434.518 m
191.7957 439.0562 l
S
u
u
0 O
0 g
1 w
222.666 433.5146 m
227.9583 434.1943 L
223.0329 436.2528 L
222.666 433.5146 L
f
U
u
0 R
0 G
0.5 w 1 M
223.1585 434.8375 m
225.8955 434.4707 L
S
U
U
0.8 w 4 M
193.1494 450.2822 m
225.905 460.0146 l
S
u
u
0 O
0 g
1 w
196.2666 449.7557 m
190.9329 449.6069 L
195.4798 452.4038 L
196.2666 449.7557 L
f
U
u
0 R
0 G
0.5 w 1 M
195.575 450.9862 m
192.9279 450.1996 L
S
U
U
0.8 w 4 M
192.2127 418.9316 m
225.8657 424.8599 l
S
u
u
0 O
0 g
1 w
195.2495 418.0525 m
189.9337 418.5138 L
194.7702 420.7732 L
195.2495 418.0525 L
f
U
u
0 R
0 G
0.5 w 1 M
194.7029 419.354 m
191.9832 418.8748 L
S
U
U
0.8 w 4 M
192.2153 387.188 m
225.905 392.9035 l
S
u
u
0 O
0 g
1 w
195.2465 386.2897 m
189.9337 386.7846 L
194.7844 389.0134 L
195.2465 386.2897 L
f
U
u
0 R
0 G
0.5 w 1 M
194.7081 387.5946 m
191.9855 387.1326 L
S
U
U
0.8 w 4 M
225.6674 402.7367 m
192.1504 409.39 l
S
u
u
0 O
0 g
1 w
222.6124 401.9233 m
227.9369 402.2698 L
223.1503 404.6331 L
222.6124 401.9233 L
f
U
u
0 R
0 G
0.5 w 1 M
223.1869 403.2126 m
225.8955 402.675 L
S
U
U
0.8 w 4 M
225.6936 371.3884 m
192.2455 378.3791 l
S
u
u
0 O
0 g
1 w
222.6306 370.6058 m
227.9583 370.8986 L
223.1958 373.31 L
222.6306 370.6058 L
f
U
u
0 R
0 G
0.5 w 1 M
223.218 371.8892 m
225.9211 371.3244 L
S
U
U
0 To
1 0 0 1 126.7916 479.375 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(A sends \(0, 1, A0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 445.875 0 Tp
TP
0 Tr
(A gets \(0, 0, B0\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 438.0417 0 Tp
TP
0 Tr
(A sends \(1, 0, A1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 467.375 0 Tp
TP
0 Tr
(B gets \(0, 1, A0\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 459.375 0 Tp
TP
0 Tr
(B sends \(0, 0, B0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 430.5417 0 Tp
TP
0 Tr
(B gets \(1, 0, A1\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 422.5417 0 Tp
TP
0 Tr
(B sends \(1, 1, B1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 399.5417 0 Tp
TP
0 Tr
(B gets \(0, 1, A2\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 391.375 0 Tp
TP
0 Tr
(B sends \(0, 0, B2\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 368.5417 0 Tp
TP
0 Tr
(B gets \(1, 0, A3\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 359.0417 0 Tp
TP
0 Tr
(B sends \(1, 1, B3\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 415.0417 0 Tp
TP
0 Tr
(A gets \(1, 1, B1\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 407.0417 0 Tp
TP
0 Tr
(A sends \(0, 1, A2\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 383.875 0 Tp
TP
0 Tr
(A gets \(0, 0, B2\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 376.0417 0 Tp
TP
0 Tr
(A sends \(1, 0, A3\)) Tx 
(\r) TX 
TO
0 R
0 G
0.8 w
418.0498 473.4727 m
385.2281 482.9804 l
S
u
u
0 O
0 g
1 w
414.9362 472.9248 m
420.2708 472.8125 L
415.7048 475.5783 L
414.9362 472.9248 L
f
U
u
0 R
0 G
0.5 w 1 M
415.6193 474.16 m
418.2718 473.3916 L
S
U
U
0.8 w 4 M
415.6851 429.4759 m
382.1149 435.8544 l
S
u
u
0 O
0 g
1 w
412.6368 428.6375 m
417.9583 429.0276 L
413.1525 431.3516 L
412.6368 428.6375 L
f
U
u
0 R
0 G
0.5 w 1 M
413.2007 429.9316 m
415.9136 429.4161 L
S
U
U
0.8 w 4 M
382.7078 448.5964 m
419.9583 480.375 l
S
u
u
0 O
0 g
1 w
385.7822 449.3328 m
380.9329 447.1069 L
384.0211 451.4612 L
385.7822 449.3328 L
f
U
u
0 R
0 G
0.5 w 1 M
384.6639 450.1941 m
382.5364 448.4336 L
S
U
U
0.8 w 4 M
378.7504 412.5639 m
420.5833 462.0417 l
S
u
u
0 O
0 g
1 w
381.6731 413.769 m
377.2284 410.8169 L
379.6027 415.598 L
381.6731 413.769 L
f
U
u
0 R
0 G
0.5 w 1 M
380.4346 414.4461 m
378.6063 412.3766 L
S
U
U
0.8 w 4 M
378.9298 380.1376 m
419.382 413.0597 l
S
u
u
0 O
0 g
1 w
382.0208 380.8015 m
377.1204 378.6903 L
380.3101 382.9708 L
382.0208 380.8015 L
f
U
u
0 R
0 G
0.5 w 1 M
380.923 381.6889 m
378.7547 379.9789 L
S
U
U
0.8 w 4 M
415.6807 395.324 m
382.0478 401.3642 l
S
u
u
0 O
0 g
1 w
412.641 394.455 m
417.9583 394.8986 L
413.1293 397.1741 L
412.641 394.455 L
f
U
u
0 R
0 G
0.5 w 1 M
413.1919 395.7545 m
415.9098 395.2665 L
S
U
U
0.8 w 4 M
415.6899 358.871 m
382.189 365.6053 l
S
u
u
0 O
0 g
1 w
412.6329 358.065 m
417.9583 358.3986 L
413.1774 360.7735 L
412.6329 358.065 L
f
U
u
0 R
0 G
0.5 w 1 M
413.2106 359.3529 m
415.9179 358.8087 L
S
U
U
0 To
1 0 0 1 316.7916 479.375 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
(A sends \(0, 1, A0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 316.7916 441.875 0 Tp
TP
0 Tr
8 0 Tl
(A gets \(0, 1, B0\)*) Tx 
(\r) Tx 
T*
(A sends \(0, 0, A0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.2917 425.375 0 Tp
TP
0 Tr
(B gets \(0, 0, A0\)\r) Tx 
T*
(B sends \(1, 0, B1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.625 479.0417 0 Tp
TP
0 Tr
6 0 Tl
(B sends \(0, 1, B0\)\r) Tx 
0 -10 Td
10 0 Tl
(B gets \(0, 1, A0\)*\r) Tx 
0 -8 Td
8 0 Tl
(B sends \(0, 0, B0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.2917 392.0417 0 Tp
TP
0 Tr
(B gets \(1, 0, A1\)*\r) Tx 
T*
(B sends \(1, 1, B1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.2917 356.0417 0 Tp
TP
0 Tr
0 0 Tl
(B gets \(1, 1, A1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.2917 348.0417 0 Tp
TP
0 Tr
(B sends \(0, 1, B2\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 316.7916 407.375 0 Tp
TP
0 Tr
8 0 Tl
(A gets \(0, 0, B0\)\r) Tx 
T*
(A sends \(1, 0, A1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 316.7916 371.375 0 Tp
TP
0 Tr
(A gets \(1, 0, B1\)*) Tx 
(\r) Tx 
T*
(A sends \(1, 1, A1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 306.4583 313 0 Tp
TP
-8.8857 0 Td
0 Tr
1 Ta
0 0 Tl
(Time) Tx 
(\r) TX 
TO
0 To
1 0 0 1 211.4583 308 0 Tp
TP
-4.8857 0 Td
0 Tr
(\(a\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 402.125 308 0 Tp
TP
-4.8857 0 Td
0 Tr
(\(b\)) Tx 
(\r) TX 
TO
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec

endFig 
3601 V
16 R
720(Fig.)S
1020(3-14.)S
1394(Two)S
1735(scenarios)S
2379(for)S
2612(protocol)S
3193(4.)S
3399(The)S
3696(notation)S
4269(is)S
4422(\(seq,)S
4776(ack,)S
3761 V
720(packet)S
1228(number\).)S
1940(An)S
2224(asterisk)S
2803(indicates)S
3463(where)S
3945(a)S
4103(network)S
4717(layer)S
3921 V
(accepts)475 720 A
1235(a)S
1347(packet.)S
7142 V
8 R
1200(From:)S
8 I
1416(Computer)S
1757(Networks)S
8 R
2061(,)S
2101(3rd)S
2228(ed.)S
2344(by)S
2444(Andrew)S
2723(S.)S
2808(Tanenbaum,)S
8 R-1
3228(!)S
8 R
(1996)160 3310 A
3490(Prentice)S
3774(Hall)S
8427 V
EP
%%EndDocument
 @endspecial 3942 3971 a
 currentpoint currentpoint translate 1 1.31207 div 1 1.31207 div scale
neg exch neg exch translate
 3942 3971 a 3774 4204 a Fc(Figure)30
b(1:)43 b Fb(Tw)m(o)f(scenarios.)64 b(The)43 b(notation)e(is)i(\(seq,)h
(A)m(CK,)e(pac)m(k)m(et)g(n)m(um)m(b)s(er\),)f(e.g.,)i(\(1,)h(0,)f
(A0\).)64 b(An)44 b(asterisk)3774 4353 y(indicates)j(where)g(a)h(net)m
(w)m(ork)e(la)m(y)m(er)g(has)i(receiv)m(ed)f(a)h(pac)m(k)m(et.)79
b(\(A\))47 b(normal)e(case,)50 b(\(B\))d(due)i(to)e(premature)3774
4503 y(timeouts,)37 b(duplicated)i(pac)m(k)m(ets)h(ha)m(v)m(e)f(b)s
(een)j(receiv)m(ed)d(b)m(y)h(DLL,)h(but)g(only)f(the)g(pac)m(k)m(et)f
(in)h(the)h(\014rst)f(cop)m(y)g(of)3774 4652 y(the)e(frame)f(is)h
(passed)h(to)g(net)m(w)m(ork)d(la)m(y)m(er.)8755 5087
y
 currentpoint grestore moveto
 8755 5087 a -120 5851 a Fg(5)716 b(Lecture)26 b(slides)g(for)h
(433-353)g Ff(Computer)i(Networks)p Fg(,)2250 5849 y(c)2229
5851 y Fe(\015)42 b Fg(all)27 b(righ)n(ts)f(reserv)n(ed)g(b)n(y)e
(Zhi-Qiang)i(LIU,)f(2000)p eop
PStoPSsaved restore
%%Page: (4,5,6,7) 2
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
28.346457 426.883676 translate
0.452359 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
6 5 bop -70 251 a Fj(The)77 b(p)6 b(eculier)77 b(scenario:)103
b(a)77 b(close-up)p -120 583 3894 4 v 478 4108 a
 currentpoint currentpoint translate 1.48572 1.48572 scale neg exch
neg exch translate
 478
4108 a @beginspecial 276.960724 @llx 495.141998 @lly
497.134552 @urx 749.188721 @ury 2201 @rwi @clip @setspecial
%%BeginDocument: figures/tanen-figs/figs4ch3/fig3-14.ps

/devps 180 dict def devps begin
/res 10.000000 def
/y_offset 843 def
/X{exch}bind def
/mm {transform round X round X itransform} bind def
/r{rmoveto}bind def
/m{moveto}bind def
/l{lineto}bind def
/rl{rlineto}bind def
/st{stroke}bind def
/gs{gsave}bind def
/gr{grestore}bind def
/cp{currentpoint}bind def
/np{newpath}bind def
/ct{curveto}bind def
systemdict /setpacking known
 { /savepacking currentpacking def true setpacking } if
/m0{0 0 moveto}bind def
/xc{//res div}bind def
/yc{//res neg div //y_offset add}bind def
/lc{yc X xc X l st}bind def
/mc{yc X xc X m}bind def
/el{gs /a X def a div 1 X scale cp np a xc 2 div 0 360 arc st gr}bind def
/ar{cp 7 2 roll np xc 5 1 roll atan 3 1 roll atan X arc st}bind def
/sp{yc X xc X 6 2 roll yc X xc X 6 2 roll yc X xc X 6 2 roll ct}bind def
/V{//res neg div //y_offset add
currentpoint pop X
m}bind def
/H{//res div
0 transform X round X itransform pop
currentpoint X pop
moveto}bind def
/h{//res div 0 r}bind def
/v{//res neg div 0 X r}bind def
/S{X H show}bind def
/A{H //res div 1 index stringwidth pop sub 1 index length div 0 3 2 roll ashow}bind def
/psize 10 def
/height 0 def
/cheight { height 0 ne { height } { psize } ifelse } bind def
/slant 0 def
/FF{findfont X dup 30 div 0 mm pop setlinewidth /psize X def
    [psize 0 cheight slant sin slant cos div mul cheight 0 0]
    makefont setfont}bind def
/shade{gs
 /dy X def
 /dx X def
 np m
 0 /dy rl
 /dx 0 rl
 0 /dy neg rl
 /dx neg 0 rl
 closepath
 .9 setgray
 fill
gr}bind def
1 setlinecap

/resolution res 72 mul def


/startFig {
	/SavedState save def
	userdict maxlength dict begin
	currentpoint transform

	DocumentInitState setmiterlimit setgray setdash setlinejoin setlinecap
		setlinewidth setmatrix

	itransform moveto

	/ury exch def
	/urx exch def
	/lly exch def
	/llx exch def
	/y exch 72 mul resolution div def
	/x exch 72 mul resolution div def
	
	currentpoint /cy exch def /cx exch def

	/sx x urx llx sub div def
	/sy y ury lly sub div def

	sx sy scale

	cx sx div llx sub
	cy sy div ury sub translate
	
	/DefFigCTM matrix currentmatrix def

	/initmatrix {
		DefFigCTM setmatrix
	} def
	/defaultmatrix {
		DefFigCTM exch copy
	} def

	/initgraphics {
		DocumentInitState setmiterlimit setgray setdash 
			setlinejoin setlinecap setlinewidth setmatrix
		DefFigCTM setmatrix
	} def

	/showpage {
		initgraphics
	} def

}bind  def
/clipFig {
	currentpoint 6 2 roll
	newpath 4 copy
	4 2 roll moveto
	6 -1 roll exch lineto
	exch lineto
	exch lineto
	closepath clip
	newpath
	moveto
}bind  def
/doclip { llx lly urx ury clipFig } def
/endFig {
	end SavedState restore
}bind  def
/globalstart {
	fontnum psize slant height resolution currentpoint 
	pagesave restore gsave 
}bind  def
/globalend {
	grestore moveto
	/resolution exch def /height exch def
	/slant exch def /psize exch def /fontnum exch def
	F
	/pagesave save def
}bind  def


/fontnum 1 def 
systemdict /setpacking known { savepacking setpacking} if
end
/BP{
save mark devps begin m0
/DocumentInitState [ matrix currentmatrix currentlinewidth currentlinecap
currentlinejoin currentdash currentgray currentmiterlimit ] cvx def
}bind def
/EP{
end cleartomark restore showpage}def

/Encoding-1 256 array def
0 1 255 {Encoding-1 exch /.notdef put} for
Encoding-1 8#301 StandardEncoding 8#101 26 getinterval putinterval %A-B
Encoding-1 8#341 StandardEncoding 8#141 26 getinterval putinterval %a-b
Encoding-1 8#241 StandardEncoding 8#301 16 getinterval putinterval %accents
Encoding-1 8#373 StandardEncoding 8#365 1 getinterval putinterval %dotlessi
Encoding-1
dup 8#41 /copyright put
dup 8#42 /registered put
dup 8#43 /trademark put
dup 8#44 /logicalnot put
dup 8#45 /Eth put
dup 8#46 /eth put
dup 8#47 /Thorn put
dup 8#50 /thorn put
dup 8#51 /brokenbar put
dup 8#52 /degree put
dup 8#53 /divide put
dup 8#54 /multiply put
dup 8#55 /minus put
dup 8#56 /onehalf put
dup 8#57 /onequarter put
dup 8#60 /threequarters put
dup 8#101 /Aacute put
dup 8#102 /Acircumflex put
dup 8#103 /Adieresis put
dup 8#104 /Agrave put
dup 8#105 /Aring put
dup 8#106 /Atilde put
dup 8#107 /Ccedilla put
dup 8#110 /Eacute put
dup 8#111 /Ecircumflex put
dup 8#112 /Edieresis put
dup 8#113 /Egrave put
dup 8#114 /Iacute put
dup 8#115 /Icircumflex put
dup 8#116 /Idieresis put
dup 8#117 /Igrave put
dup 8#120 /Ntilde put
dup 8#121 /Oacute put
dup 8#122 /Ocircumflex put
dup 8#123 /Odieresis put
dup 8#124 /Ograve put
dup 8#125 /Otilde put
dup 8#126 /Scaron put
dup 8#127 /Uacute put
dup 8#130 /Ucircumflex put
dup 8#131 /Udieresis put
dup 8#132 /Ugrave put
dup 8#133 /Ydieresis put
dup 8#134 /Zcaron put
dup 8#135 /aacute put
dup 8#136 /acircumflex put
dup 8#137 /adieresis put
dup 8#140 /agrave put
dup 8#141 /aring put
dup 8#142 /atilde put
dup 8#143 /ccedilla put
dup 8#144 /eacute put
dup 8#145 /ecircumflex put
dup 8#146 /edieresis put
dup 8#147 /egrave put
dup 8#150 /iacute put
dup 8#151 /icircumflex put
dup 8#152 /idieresis put
dup 8#153 /igrave put
dup 8#154 /ntilde put
dup 8#155 /oacute put
dup 8#156 /ocircumflex put
dup 8#157 /odieresis put
dup 8#160 /ograve put
dup 8#161 /otilde put
dup 8#162 /scaron put
dup 8#163 /uacute put
dup 8#164 /ucircumflex put
dup 8#165 /udieresis put
dup 8#166 /ugrave put
dup 8#167 /ydieresis put
dup 8#170 /zcaron put
pop

/Enc-dict 30 dict def
Enc-dict /tmpstr1 50 string put
Enc-dict /tmpstr2 50 string put
Enc-dict /tmpstr3 50 string dup (Encoding-) exch cvs pop put
/AEnc-def { % arguments: the original font's name, encoding nr
Enc-dict begin
tmpstr2 cvs /Enc-no exch def % Remember the number in a string
dup /OrigName exch def % remember the name
findfont dup maxlength dict /newdict exch def % get dictionary for new font
{ exch dup /FID ne
   { exch newdict 3 1 roll put }
   { pop pop } % Ignore FID
   ifelse
} forall
newdict begin
/Encoding
  tmpstr3 9 Enc-no putinterval tmpstr3 0 9 Enc-no length add getinterval
  cvn load
  def % Replace encoding
currentdict /UniqueID known
{ /UniqueID UniqueID Enc-no cvi 49999 mul add def } if % Derive New UniqueID
end % newdict
/FNlength OrigName tmpstr1 cvs length def % convert name, remember length
FNlength 1 add Enc-no length add string
dup 0 OrigName tmpstr1 cvs putinterval
dup FNlength (-) putinterval
dup FNlength 1 add Enc-no putinterval
dup 0 tmpstr1 0 FNlength getinterval putinterval % Add old name
cvn dup newdict /FontName 3 2 roll put newdict definefont
end % Enc-dict
} def
/Times-Roman 1 AEnc-def pop
/R-1{/Times-Roman-1 FF}def
/R{/Times-Roman FF}def
/I{/Times-Italic FF}def
/HB{/Helvetica-Bold FF}def
/L{/Helvetica FF}def
/altRTD 20 dict def
altRTD begin
/s{setcachedevice}bind def
/m{moveto}bind def
/c{curveto}bind def
/S{stroke}bind def
/l{lineto}bind def
end
/F_Troff 17 dict def F_Troff begin
systemdict /currentpacking known
{/SavePacking currentpacking def true setpacking}if
/PaintType 0 def
/FontType 3 def
/StrokeWidth 25 def
/UniqueID 8277030 def
/FontMatrix [.001000 0 0 .001000 0 0] def
/FontBBox [-85 -150 1000 1000 ] def
/Encoding 256 array def
/CD 256 1 add dict def
/FontInfo 3 dict def FontInfo begin
/UnderlinePosition -133 def /UnderlineThickness 20 def end
/FontName (Troff) def
0 1 256 1 sub{Encoding exch /.notdef put}for
CD /.notdef{500 0 setcharwidth{}}put
Encoding (1) 0 get /br put
CD /br{
0 0 -500 -500 1000 1000 s
np
clw
0 -100 m
0 900 l
{S}
}put
Encoding (2) 0 get /ul put
CD /ul{
500 0 0 -200 500 0 s
np
clw
0 -100 m
500 -100 l
{S}
}put
Encoding (3) 0 get /ru put
CD /ru{
500 0 -500 -500 1000 1000 s
np
clw
m0
500 0 l
{S}
}put
Encoding (4) 0 get /vr put
CD /vr{
0 0 -500 -500 1000 1000 s
np
clw
m0
0 1000 l
{S}
}put
Encoding (5) 0 get /sq put
CD /sq{
500 0 0 0 500 1000 s
np
m0
0 500 rl
500 0 rl
0 -500 rl
-500 0 rl
closepath
61 61 m
378 0 rl
0 378 rl
-378 0 rl
closepath
{fill}
}put
Encoding (6) 0 get /bx put
CD /bx{
500 0 0 0 500 1000 s
np
m0
0 500 rl
500 0 rl
0 -500 rl
closepath
{fill}
}put
Encoding (7) 0 get /rn put
CD /rn{
500 0 -500 -500 1000 1000 s
np
30 setlinewidth
-30 900 m
500 0 rl
{S}
}put
Encoding 120 /rc put
CD /rc {
494 0 -85 -80 255 926 s
201 -80 m 201 872 l -85 872 l -85 926 l 255 926 l 255 -80 l
closepath {fill}
} put
Encoding 121 /lc put
CD /lc {
491 0 201 -80 541 926 s
201 -80 m 201 926 l 541 926 l 541 872 l 255 872 l 255 -80 l
closepath {fill}
} put
Encoding 122 /rf put
CD /rf {
494 0 -85 -80 255 926 s
-85 -80 m -85 -26 l 201 -26 l 201 926 l 255 926 l 255 -80 l
closepath {fill}
} put
Encoding 123 /lf put
CD /lf {
494 0 201 -80 541 926 s
201 -80 m 201 926 l 255 926 l 255 -26 l 872 -26 l 872 -80 l
closepath {fill}
} put
Encoding 97 /a put
CD /a{5 setlinewidth 1000 0 0 66 942 421 s 430 415
m 578 406 678 349 662 319 c 655 306 614 287 583
296 c 570 300 466 340 438 332 c 365 309 335 213
270 209 c 0 310 m 108 310 l 108 114 l 0
114 l 0 310 l 42 161 m 42 134 l 66 134 l 66
161 l 42 161 l 47 155 m 47 140 l 62 140 l 62
155 l 47 155 l 110 133 m 226 113 300 66 410
80 c 497 91 550 69 634 76 c 645 76 663 92 669
107 c 677 125 673 141 668 160 c 725 334 m 758
332 734 253 701 250 c 501 325 m 475 316 476 309
473 302 c 465 282 482 263 499 257 c 552 236 615
253 689 253 c 701 253 713 236 713 218 c 712 194
702 168 678 161 c 671 159 663 160 655 160 c 591
158 516 156 479 168 c 461 173 453 191 453 210 c 453
224 456 235 466 244 c 476 253 490 252 503 255 c 459
84 m 447 96 435 106 435 123 c 435 136 440 145 447
155 c 453 163 462 168 469 173 c 110 293 m 173
318 300 421 435 415 c 609 407 852 416 885 411 c 898
409 924 411 930 380 c 942 316 828 339 742 334 c 731
334 730 335 725 335 c 701 336 685 336 660 336 c{S}}put
Encoding 98 /b put
CD /b{5 setlinewidth 1000 0 -12 66 930 421 s 500
415 m 352 406 252 349 268 319 c 275 306 316 287
347 296 c 360 300 464 340 492 332 c 565 309 595
213 660 209 c 930 310 m 822 310 l 822 114 l 930
114 l 930 310 l 888 161 m 888 134 l 864 134
l 864 161 l 888 161 l 883 155 m 883 140 l 868
140 l 868 155 l 883 155 l 820 133 m 704 113
630 66 520 80 c 433 91 380 69 296 76 c 285 76
267 92 261 107 c 253 125 257 141 262 160 c 205
334 m 172 332 196 253 229 250 c 429 325 m 455
316 454 309 457 302 c 465 282 448 263 431 257 c 378
236 315 253 241 253 c 229 253 217 236 217 218 c 218
194 228 168 252 161 c 259 159 267 160 275 160 c 339
158 414 156 451 168 c 469 173 477 191 477 210 c 477
224 474 235 464 244 c 454 253 440 252 427 255 c 471
84 m 483 96 495 106 495 123 c 495 136 490 145 483
155 c 477 163 468 168 461 173 c 820 293 m 757
318 630 421 495 415 c 321 407 78 416 45 411 c 32
409 6 411 0 380 c -12 316 102 339 188 334 c 199
334 200 335 205 335 c 229 336 245 336 270 336 c{S}}put
Encoding 99 /c put
CD /c{710 0 0 0 700 700 s
33 setlinewidth
335 23 m 335 325 302 -90 270 arc
{S}}put
Encoding 100 /d put
CD /d{590 0 134 158 477 500 s 300
160 m 208 162 134 238 135 330 c 136 423 212 500
305 500 c 397 500 473 427 475 335 c 477 239 396
158 300 160 c{fill}}put
Encoding 101 /e put
CD /e { % produces the VU symbol
760 0 0 0 750 750 s
267 267 scale
0 setlinejoin
.045 setlinewidth
0 setlinecap
3 setmiterlimit
newpath
0 0 moveto
0 2.8 rlineto
0.38 0 rlineto
0 -2.3 rlineto
0.02 0 rlineto
0.67 2.3 rlineto
0.38 0 rlineto
-0.83 -2.8 rlineto
closepath
1.61 2.8 moveto
0.38 0 rlineto
-0.687 -2.32 rlineto
-.03 -.1 -0.03 -0.1 0 -0.1 rcurveto
1.027 0 rlineto
0 2.42 rlineto
0.38 0 rlineto
currentpoint pop 0 % x 0
2.0 0
0.28 arcto
4 {pop} repeat
0.78 0 1.61 2.8 0.15 arcto
4 {pop} repeat
closepath
{S}} put
/BuildChar{altRTD /BuildChar get exec}def end
altRTD begin /BuildChar{altRTD begin
/char exch def /fontdict exch def save
/charname fontdict /Encoding get char get def
/clw { 37 0 mm pop setlinewidth}bind def
fontdict /StrokeWidth get setlinewidth
0 setlinecap
0 setlinejoin
fontdict /CD get dup charname known
{charname}{/.notdef}ifelse get newpath exec
fontdict /PaintType get 0 eq{exec}{pop S}ifelse
restore end}def end
systemdict /currentpacking known{F_Troff /SavePacking get setpacking}if
/Troff F_Troff definefont pop
/Y1{/Troff FF}def
/Y{/Symbol FF}def
BP
/slant 0 def
/height 0 def
916 V
720 H
4320 
2165 
118.00 
302.00 
495.00 
491.00 
startFig 
%AI5_FileFormat 1.1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 125.5 305.5 677.5 1035.5
%AI3_DocumentPreview: Header
%AI5_ArtSize: 360 180
%AI5_RulerUnits: 2
%AI5_ArtFlags: 0 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 66 528 2 1114 813 25 0 1 3 42
%AI5_OpenViewLayers: 5
userdict /Adobe_level2_AI5 21 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	/gt38? version cvx exec 38 gt def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
	level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
currentpacking true setpacking
userdict /Adobe_typography_AI5 48 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
	exch findfont exch scalefont setfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
} def
currentdict readonly pop
end
setpacking
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI5_vars 70 dict dup begin
put
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_IllustratorA_AI5 74 dict dup begin
put
/initialize
{
	Adobe_IllustratorA_AI5 dup begin
	Adobe_IllustratorA_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_IllustratorA_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			clip /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore clip newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore clip newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	_pola 0 eq
	{
		newpath
	} if
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[
	] 0 setdash
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		fill
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	version cvx exec 38 gt
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef clip
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
			
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
currentdict readonly pop
end
setpacking
Adobe_level2_AI5 /initialize get exec
Adobe_IllustratorA_AI5_vars Adobe_IllustratorA_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_IllustratorA_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Yellow Stripe)
(Yellow Stripe) 8.4499 4.6 80.4499 76.6 [
%AI3_Tile
(0 O 0 R 0 0.4 1 0 k 0 0.4 1 0 K) @
(
800 Ar
0 J 0 j 3.6 w 4 M []0 d
%AI3_Note:
0 D
8.1999 8.1999 m
80.6999 8.1999 L
S
8.1999 22.6 m
80.6999 22.6 L
S
8.1999 37.0001 m
80.6999 37.0001 L
S
8.1999 51.3999 m
80.6999 51.3999 L
S
8.1999 65.8 m
80.6999 65.8 L
S
8.1999 15.3999 m
80.6999 15.3999 L
S
8.1999 29.8 m
80.6999 29.8 L
S
8.1999 44.1999 m
80.6999 44.1999 L
S
8.1999 58.6 m
80.6999 58.6 L
S
8.1999 73.0001 m
80.6999 73.0001 L
S
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Red & Yellow)
(Red & Yellow) 0 2 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E9E8E8E7E7E7E6E6E5E5E5E4E4E3E3E3E2E2E1E1E1E0E0DF
DFDFDEDEDDDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CF
CFCFCECECDCDCDCCCCCBCBCBCACAC9C9C9C8C8C7C7C7C6C6C5C5C5C4C4C3C3C3C2C2C1C1C1C0C0BF
BFBFBEBEBDBDBDBCBCBBBBBBBABAB9B9B9B8B8B7B7B7B6B6B5B5B5B4B4B3B3B3B2B2B1B1B1B0B0AF
AFAFAEAEADADADACACABABABAAAAA9A9A9A8A8A7A7A7A6A6A5A5A5A4A4A3A3A3A2A2A1A1A1A0A09F
9F9F9E9E9D9D9D9C9C9B9B9B9A9A9999
>
0
1 %_Br
[
0 1 0.6 0 1 50 100 %_Bs
0 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Blue Radial)
(Yellow & Blue Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 2 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Blue Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
(Yellow Stripe) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
0 0 0 0 k
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
0 0 0 0 k
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
0 0 0 0 k
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%AI5_BeginLayer
1 0 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
0 R
0 G
800 Ar
0 J 0 j 0.5 w 4 M []0 d
%AI3_Note:
0 D
305.9744 324.817 m
305.9744 486 l
S
U
u
u
0 O
0 g
1 w
304.5818 327.6553 m
305.9583 322.5 L
307.3444 327.6553 L
304.5818 327.6553 L
f
U
u
0 R
0 G
0.5 w 1 M
305.9583 327.3428 m
305.9583 324.5812 L
S
U
U
0.8 w 4 M
225.7373 471.7227 m
192.9156 481.2304 l
S
u
u
0 O
0 g
1 w
222.6237 471.1748 m
227.9583 471.0625 L
223.3923 473.8283 L
222.6237 471.1748 L
f
U
u
0 R
0 G
0.5 w 1 M
223.3068 472.41 m
225.9593 471.6416 L
S
U
U
0.8 w 4 M
225.664 434.518 m
191.7957 439.0562 l
S
u
u
0 O
0 g
1 w
222.666 433.5146 m
227.9583 434.1943 L
223.0329 436.2528 L
222.666 433.5146 L
f
U
u
0 R
0 G
0.5 w 1 M
223.1585 434.8375 m
225.8955 434.4707 L
S
U
U
0.8 w 4 M
193.1494 450.2822 m
225.905 460.0146 l
S
u
u
0 O
0 g
1 w
196.2666 449.7557 m
190.9329 449.6069 L
195.4798 452.4038 L
196.2666 449.7557 L
f
U
u
0 R
0 G
0.5 w 1 M
195.575 450.9862 m
192.9279 450.1996 L
S
U
U
0.8 w 4 M
192.2127 418.9316 m
225.8657 424.8599 l
S
u
u
0 O
0 g
1 w
195.2495 418.0525 m
189.9337 418.5138 L
194.7702 420.7732 L
195.2495 418.0525 L
f
U
u
0 R
0 G
0.5 w 1 M
194.7029 419.354 m
191.9832 418.8748 L
S
U
U
0.8 w 4 M
192.2153 387.188 m
225.905 392.9035 l
S
u
u
0 O
0 g
1 w
195.2465 386.2897 m
189.9337 386.7846 L
194.7844 389.0134 L
195.2465 386.2897 L
f
U
u
0 R
0 G
0.5 w 1 M
194.7081 387.5946 m
191.9855 387.1326 L
S
U
U
0.8 w 4 M
225.6674 402.7367 m
192.1504 409.39 l
S
u
u
0 O
0 g
1 w
222.6124 401.9233 m
227.9369 402.2698 L
223.1503 404.6331 L
222.6124 401.9233 L
f
U
u
0 R
0 G
0.5 w 1 M
223.1869 403.2126 m
225.8955 402.675 L
S
U
U
0.8 w 4 M
225.6936 371.3884 m
192.2455 378.3791 l
S
u
u
0 O
0 g
1 w
222.6306 370.6058 m
227.9583 370.8986 L
223.1958 373.31 L
222.6306 370.6058 L
f
U
u
0 R
0 G
0.5 w 1 M
223.218 371.8892 m
225.9211 371.3244 L
S
U
U
0 To
1 0 0 1 126.7916 479.375 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
/_Helvetica 8 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 0 2 2 3 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(A sends \(0, 1, A0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 445.875 0 Tp
TP
0 Tr
(A gets \(0, 0, B0\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 438.0417 0 Tp
TP
0 Tr
(A sends \(1, 0, A1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 467.375 0 Tp
TP
0 Tr
(B gets \(0, 1, A0\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 459.375 0 Tp
TP
0 Tr
(B sends \(0, 0, B0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 430.5417 0 Tp
TP
0 Tr
(B gets \(1, 0, A1\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 422.5417 0 Tp
TP
0 Tr
(B sends \(1, 1, B1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 399.5417 0 Tp
TP
0 Tr
(B gets \(0, 1, A2\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 391.375 0 Tp
TP
0 Tr
(B sends \(0, 0, B2\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 368.5417 0 Tp
TP
0 Tr
(B gets \(1, 0, A3\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 232.2917 359.0417 0 Tp
TP
0 Tr
(B sends \(1, 1, B3\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 415.0417 0 Tp
TP
0 Tr
(A gets \(1, 1, B1\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 407.0417 0 Tp
TP
0 Tr
(A sends \(0, 1, A2\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 383.875 0 Tp
TP
0 Tr
(A gets \(0, 0, B2\)*) Tx 
(\r) TX 
TO
0 To
1 0 0 1 126.7916 376.0417 0 Tp
TP
0 Tr
(A sends \(1, 0, A3\)) Tx 
(\r) TX 
TO
0 R
0 G
0.8 w
418.0498 473.4727 m
385.2281 482.9804 l
S
u
u
0 O
0 g
1 w
414.9362 472.9248 m
420.2708 472.8125 L
415.7048 475.5783 L
414.9362 472.9248 L
f
U
u
0 R
0 G
0.5 w 1 M
415.6193 474.16 m
418.2718 473.3916 L
S
U
U
0.8 w 4 M
415.6851 429.4759 m
382.1149 435.8544 l
S
u
u
0 O
0 g
1 w
412.6368 428.6375 m
417.9583 429.0276 L
413.1525 431.3516 L
412.6368 428.6375 L
f
U
u
0 R
0 G
0.5 w 1 M
413.2007 429.9316 m
415.9136 429.4161 L
S
U
U
0.8 w 4 M
382.7078 448.5964 m
419.9583 480.375 l
S
u
u
0 O
0 g
1 w
385.7822 449.3328 m
380.9329 447.1069 L
384.0211 451.4612 L
385.7822 449.3328 L
f
U
u
0 R
0 G
0.5 w 1 M
384.6639 450.1941 m
382.5364 448.4336 L
S
U
U
0.8 w 4 M
378.7504 412.5639 m
420.5833 462.0417 l
S
u
u
0 O
0 g
1 w
381.6731 413.769 m
377.2284 410.8169 L
379.6027 415.598 L
381.6731 413.769 L
f
U
u
0 R
0 G
0.5 w 1 M
380.4346 414.4461 m
378.6063 412.3766 L
S
U
U
0.8 w 4 M
378.9298 380.1376 m
419.382 413.0597 l
S
u
u
0 O
0 g
1 w
382.0208 380.8015 m
377.1204 378.6903 L
380.3101 382.9708 L
382.0208 380.8015 L
f
U
u
0 R
0 G
0.5 w 1 M
380.923 381.6889 m
378.7547 379.9789 L
S
U
U
0.8 w 4 M
415.6807 395.324 m
382.0478 401.3642 l
S
u
u
0 O
0 g
1 w
412.641 394.455 m
417.9583 394.8986 L
413.1293 397.1741 L
412.641 394.455 L
f
U
u
0 R
0 G
0.5 w 1 M
413.1919 395.7545 m
415.9098 395.2665 L
S
U
U
0.8 w 4 M
415.6899 358.871 m
382.189 365.6053 l
S
u
u
0 O
0 g
1 w
412.6329 358.065 m
417.9583 358.3986 L
413.1774 360.7735 L
412.6329 358.065 L
f
U
u
0 R
0 G
0.5 w 1 M
413.2106 359.3529 m
415.9179 358.8087 L
S
U
U
0 To
1 0 0 1 316.7916 479.375 0 Tp
TP
0 Tr
0 O
0 g
1 w 4 M
(A sends \(0, 1, A0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 316.7916 441.875 0 Tp
TP
0 Tr
8 0 Tl
(A gets \(0, 1, B0\)*) Tx 
(\r) Tx 
T*
(A sends \(0, 0, A0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.2917 425.375 0 Tp
TP
0 Tr
(B gets \(0, 0, A0\)\r) Tx 
T*
(B sends \(1, 0, B1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.625 479.0417 0 Tp
TP
0 Tr
6 0 Tl
(B sends \(0, 1, B0\)\r) Tx 
0 -10 Td
10 0 Tl
(B gets \(0, 1, A0\)*\r) Tx 
0 -8 Td
8 0 Tl
(B sends \(0, 0, B0\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.2917 392.0417 0 Tp
TP
0 Tr
(B gets \(1, 0, A1\)*\r) Tx 
T*
(B sends \(1, 1, B1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.2917 356.0417 0 Tp
TP
0 Tr
0 0 Tl
(B gets \(1, 1, A1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 422.2917 348.0417 0 Tp
TP
0 Tr
(B sends \(0, 1, B2\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 316.7916 407.375 0 Tp
TP
0 Tr
8 0 Tl
(A gets \(0, 0, B0\)\r) Tx 
T*
(A sends \(1, 0, A1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 316.7916 371.375 0 Tp
TP
0 Tr
(A gets \(1, 0, B1\)*) Tx 
(\r) Tx 
T*
(A sends \(1, 1, A1\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 306.4583 313 0 Tp
TP
-8.8857 0 Td
0 Tr
1 Ta
0 0 Tl
(Time) Tx 
(\r) TX 
TO
0 To
1 0 0 1 211.4583 308 0 Tp
TP
-4.8857 0 Td
0 Tr
(\(a\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 402.125 308 0 Tp
TP
-4.8857 0 Td
0 Tr
(\(b\)) Tx 
(\r) TX 
TO
LB
%AI5_EndLayer--
gsave annotatepage grestore showpage
Adobe_IllustratorA_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec

endFig 
3601 V
16 R
720(Fig.)S
1020(3-14.)S
1394(Two)S
1735(scenarios)S
2379(for)S
2612(protocol)S
3193(4.)S
3399(The)S
3696(notation)S
4269(is)S
4422(\(seq,)S
4776(ack,)S
3761 V
720(packet)S
1228(number\).)S
1940(An)S
2224(asterisk)S
2803(indicates)S
3463(where)S
3945(a)S
4103(network)S
4717(layer)S
3921 V
(accepts)475 720 A
1235(a)S
1347(packet.)S
7142 V
8 R
1200(From:)S
8 I
1416(Computer)S
1757(Networks)S
8 R
2061(,)S
2101(3rd)S
2228(ed.)S
2344(by)S
2444(Andrew)S
2723(S.)S
2808(Tanenbaum,)S
8 R-1
3228(!)S
8 R
(1996)160 3310 A
3490(Prentice)S
3774(Hall)S
8427 V
EP
%%EndDocument
 @endspecial 478 4108 a
 currentpoint currentpoint translate 1 1.48572 div 1 1.48572 div scale
neg exch neg exch translate
 478 4108 a -120 4340 a Fc(Figure)35
b(2:)54 b Fb(The)c(p)s(eculier)g(scenario)g(due)h(to)f(premature)d
(timeouts.)84 b(The)51 b(notation)d(is)-120 4490 y(\(seq,)d(A)m(CK,)d
(pac)m(k)m(et)h(n)m(um)m(b)s(er\),)g(e.g.,)g(\(1,)i(0,)f(A0\).)66
b(An)45 b(asterisk)d(indicates)h(where)g(a)-120 4639
y(net)m(w)m(ork)c(la)m(y)m(er)h(has)h(receiv)m(ed)f(a)h(pac)m(k)m(et.)
58 b(Duplicated)40 b(pac)m(k)m(ets)h(ha)m(v)m(e)f(b)s(een)i(receiv)m
(ed)-120 4788 y(b)m(y)28 b(DLL,)g(but)g(only)f(the)h(pac)m(k)m(et)f(in)
h(the)g(\014rst)f(cop)m(y)h(of)f(the)h(frame)e(is)i(passed)g(to)f(net)m
(w)m(ork)-120 4938 y(la)m(y)m(er)k(\(NL\).)h Fa(NOTE:)h
Fb(pac)m(k)m(et)f(b)s(elongs)g(to)g(NL)h(that)f(gets)g(framed)f
(\(wrapp)s(ed\))g(at)h(the)-120 5087 y(DLL.)-120 5851
y Fg(6)716 b(Lecture)26 b(slides)g(for)h(433-353)g Ff(Computer)i
(Networks)p Fg(,)2250 5849 y(c)2229 5851 y Fe(\015)42
b Fg(all)27 b(righ)n(ts)f(reserv)n(ed)g(b)n(y)e(Zhi-Qiang)i(LIU,)f
(2000)p eop
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
297.500000 426.883676 translate
0.452359 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
showpage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
28.346457 34.230133 translate
0.452359 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
/showpage{}def/copypage{}def/erasepage{}def
PStoPSxform concat
showpage
PStoPSsaved restore
userdict/PStoPSsaved save put
PStoPSmatrix setmatrix
297.500000 34.230133 translate
0.452359 dup scale
userdict/PStoPSmatrix matrix currentmatrix put
userdict/PStoPSclip{0 0 moveto
 595.000000 0 rlineto 0 842.000000 rlineto -595.000000 0 rlineto
 closepath}put initclip
PStoPSxform concat
showpage
PStoPSsaved restore
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
